<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cuong Sai | Khoa Học Dữ Liệu</title>
    <link>/author/cuong-sai/</link>
      <atom:link href="/author/cuong-sai/index.xml" rel="self" type="application/rss+xml" />
    <description>Cuong Sai</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Cuong Sai. All Rights Reserved</copyright><lastBuildDate>Thu, 27 Aug 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu47efca792e1e7000f9078d7b8f1dac48_31011_512x512_fill_lanczos_center_2.PNG</url>
      <title>Cuong Sai</title>
      <link>/author/cuong-sai/</link>
    </image>
    
    <item>
      <title>Download và trực quan hóa dữ liệu Covid-19 từ John Hopkins database (sử dụng Python code)</title>
      <link>/post/covid-19/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/covid-19/</guid>
      <description>&lt;p&gt;&lt;code&gt;CoVvid-19&lt;/code&gt; là một đại dịch bệnh truyền nhiễm với tác nhân là virus &lt;code&gt;SARS-CoV-2&lt;/code&gt;, hiện đang ảnh hưởng và gây thiệt hại nặng nề trên phạm vi toàn cầu. Kể từ khi đại dịch &lt;code&gt;Covid-19&lt;/code&gt; bắt đầu xuất hiện ở Vũ Hán - Trung Quốc đến nay, cái tên trường Đại học Jonhs Hopkins (Mỹ) được nhắc đi nhắc lại hằng ngày trên các phương tiện truyền thông và là một trong những cụm từ được trích dẫn nhiều nhất. Lý do đó là Đại học Johns Hopkins đã phát triển một trong những hệ thống theo dõi dữ liệu COVID-19 bền bỉ và đáng tin cậy nhất trên thế giới cho đến nay.&lt;/p&gt;
&lt;p&gt;Dữ liệu Covid-19 được đại học &lt;code&gt;John Hopkins&lt;/code&gt; thu thập và cập nhật hàng ngày tại đây 
&lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Hopkins database&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Trong bài này để hiểu hơn về đại dịch này tôi sẽ hướng dẫn các bạn cách download dữ liệu Covid-19 từ 
&lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Hopkins database&lt;/a&gt; và thực hành các thao tác chuẩn bị dữ liệu (làm sạch và biến đổi) với thư viện &lt;code&gt;pandas&lt;/code&gt; và trực quan hóa dữ liệu với thư viện &lt;code&gt;maplotlib&lt;/code&gt; sử dụng ngôn ngữ Python.&lt;/p&gt;
&lt;h3 id=&#34;nội-dung-chính-của-bài-bao-gồm&#34;&gt;Nội dung chính của bài bao gồm:&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;#prepare-data&#34;&gt;1. Download &amp;amp; chuẩn bị dữ liệu Covid-19 sử dụng thư viện pandas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;#data-visualization&#34;&gt;2. Trực quan hóa dữ liệu Covid-19 sử dụng thư viện matploblib&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;prepare-data&#34;&gt;1. Download và chuẩ bị dữ liệu&lt;/h2&gt;
&lt;p&gt;Trước hết để thực hành chúng ta cần nạp các thư viện cần thiết trên &lt;code&gt;Python&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime, timedelta
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Để thực hành tôi sẽ load 3 tập dữ liệu sau từ kho dữ liệu qua &lt;code&gt;url_links&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Confirmed:&lt;/code&gt; (Số trường hợp mới phát hiện)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Deaths:&lt;/code&gt; (Số trường hợp tử vong)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Recovered:&lt;/code&gt; (Số trường hợp hồi phục)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;url_confd = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&#39;
url_death = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&#39;
url_recvd = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv&#39;
df_confd = pd.read_csv(url_confd)
df_death = pd.read_csv(url_death)
df_recvd = pd.read_csv(url_recvd)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra thông tin các tập dữ liệu này:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_confd.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 266 entries, 0 to 265
Columns: 223 entries, Province/State to 8/27/20
dtypes: float64(2), int64(219), object(2)
memory usage: 463.5+ KB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_death.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 266 entries, 0 to 265
Columns: 222 entries, Province/State to 8/26/20
dtypes: float64(2), int64(218), object(2)
memory usage: 461.5+ KB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_recvd.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 253 entries, 0 to 252
Columns: 223 entries, Province/State to 8/27/20
dtypes: float64(2), int64(219), object(2)
memory usage: 440.9+ KB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra 5 hàng đầu tiên của tập dữ liệu &lt;code&gt;df_confd&lt;/code&gt; (2 tập còn lại tương tự):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_confd.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long  1/22/20  1/23/20  \
0            NaN    Afghanistan  33.93911  67.709953        0        0   
1            NaN        Albania  41.15330  20.168300        0        0   
2            NaN        Algeria  28.03390   1.659600        0        0   
3            NaN        Andorra  42.50630   1.521800        0        0   
4            NaN         Angola -11.20270  17.873900        0        0   

   1/24/20  1/25/20  1/26/20  1/27/20  ...  8/18/20  8/19/20  8/20/20  \
0        0        0        0        0  ...    37599    37599    37856   
1        0        0        0        0  ...     7654     7812     7967   
2        0        0        0        0  ...    39444    39847    40258   
3        0        0        0        0  ...     1005     1024     1024   
4        0        0        0        0  ...     1966     2015     2044   

   8/21/20  8/22/20  8/23/20  8/24/20  8/25/20  8/26/20  8/27/20  
0    37894    37953    37999    38054    38070    38113    38129  
1     8119     8275     8427     8605     8759     8927     9083  
2    40667    41068    41460    41858    42228    42619    43016  
3     1045     1045     1045     1060     1060     1098     1098  
4     2068     2134     2171     2222     2283     2332     2415  

[5 rows x 223 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Trích xuất thông tin về ngày từ tập dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dates = df_confd.columns[4:]
print(dates)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Index([&#39;1/22/20&#39;, &#39;1/23/20&#39;, &#39;1/24/20&#39;, &#39;1/25/20&#39;, &#39;1/26/20&#39;, &#39;1/27/20&#39;,
       &#39;1/28/20&#39;, &#39;1/29/20&#39;, &#39;1/30/20&#39;, &#39;1/31/20&#39;,
       ...
       &#39;8/18/20&#39;, &#39;8/19/20&#39;, &#39;8/20/20&#39;, &#39;8/21/20&#39;, &#39;8/22/20&#39;, &#39;8/23/20&#39;,
       &#39;8/24/20&#39;, &#39;8/25/20&#39;, &#39;8/26/20&#39;, &#39;8/27/20&#39;],
      dtype=&#39;object&#39;, length=219)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Các tập dữ liệu này được lưu ở dạng &lt;code&gt;wide format&lt;/code&gt; do đó chúng ta cần chuyển chúng dạng &lt;code&gt;long fromat&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dates = df_confd.columns[4:]
long_df_confd = df_confd.melt(id_vars=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;], 
                            value_vars=dates, var_name=&#39;Date&#39;, value_name=&#39;Confirmed&#39;)

long_df_death = df_death.melt(id_vars=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;], 
                            value_vars=dates, var_name=&#39;Date&#39;, value_name=&#39;Deaths&#39;)

long_df_recvd = df_recvd.melt(id_vars=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;], 
                            value_vars=dates, var_name=&#39;Date&#39;, value_name=&#39;Recovered&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra dữ liệu sau khi đã chuyển:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(long_df_confd.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long     Date  Confirmed
0            NaN    Afghanistan  33.93911  67.709953  1/22/20          0
1            NaN        Albania  41.15330  20.168300  1/22/20          0
2            NaN        Algeria  28.03390   1.659600  1/22/20          0
3            NaN        Andorra  42.50630   1.521800  1/22/20          0
4            NaN         Angola -11.20270  17.873900  1/22/20          0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(long_df_death.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long     Date  Deaths
0            NaN    Afghanistan  33.93911  67.709953  1/22/20       0
1            NaN        Albania  41.15330  20.168300  1/22/20       0
2            NaN        Algeria  28.03390   1.659600  1/22/20       0
3            NaN        Andorra  42.50630   1.521800  1/22/20       0
4            NaN         Angola -11.20270  17.873900  1/22/20       0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(long_df_recvd.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long     Date  Recovered
0            NaN    Afghanistan  33.93911  67.709953  1/22/20          0
1            NaN        Albania  41.15330  20.168300  1/22/20          0
2            NaN        Algeria  28.03390   1.659600  1/22/20          0
3            NaN        Andorra  42.50630   1.521800  1/22/20          0
4            NaN         Angola -11.20270  17.873900  1/22/20          0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gộp 3 tập dữ liệu này thành 1 dataframe:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df = pd.merge(left=long_df_confd, right=long_df_death, how=&#39;left&#39;,
                      on=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Date&#39;, &#39;Lat&#39;, &#39;Long&#39;])
final_df = pd.merge(left=final_df, right=long_df_recvd, how=&#39;left&#39;,
                      on=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Date&#39;, &#39;Lat&#39;, &#39;Long&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Chuyển cột dữ liệu ngày về dạng &lt;code&gt;date&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df[&#39;Date&#39;] = pd.to_datetime(final_df[&#39;Date&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra bảng dữ liệu thu được:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(final_df.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long       Date  Confirmed  \
0            NaN    Afghanistan  33.93911  67.709953 2020-01-22          0   
1            NaN        Albania  41.15330  20.168300 2020-01-22          0   
2            NaN        Algeria  28.03390   1.659600 2020-01-22          0   
3            NaN        Andorra  42.50630   1.521800 2020-01-22          0   
4            NaN         Angola -11.20270  17.873900 2020-01-22          0   

   Deaths  Recovered  
0       0        0.0  
1       0        0.0  
2       0        0.0  
3       0        0.0  
4       0        0.0  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra kích thước của bảng dữ liệu thu được:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(final_df.shape)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(58254, 8)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra khoảng thời gian của dữ liệu được thu thập:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = final_df.Date.value_counts().sort_index()
print(&#39;Ngày bắt đầu là:&#39;,a.index[0])
print(&#39;Ngày hiện tại là:&#39;,a.index[-1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Ngày bắt đầu là: 2020-01-22 00:00:00
Ngày hiện tại là: 2020-08-27 00:00:00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra &lt;code&gt;missing values&lt;/code&gt; trong tập dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df.isna().sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State    40515
Country/Region        0
Lat                   0
Long                  0
Date                  0
Confirmed             0
Deaths                0
Recovered          4161
dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Đánh giá phần trăm &lt;code&gt;missing values&lt;/code&gt; của từng cột dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;NAN = [(c, final_df[c].isna().mean()*100) for c in final_df]
NAN = pd.DataFrame(NAN, columns=[&amp;quot;column_name&amp;quot;, &amp;quot;percentage&amp;quot;])
print(NAN)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      column_name  percentage
0  Province/State   69.548872
1  Country/Region    0.000000
2             Lat    0.000000
3            Long    0.000000
4            Date    0.000000
5       Confirmed    0.000000
6          Deaths    0.000000
7       Recovered    7.142857
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ta thấy cột &lt;code&gt;Province/State&lt;/code&gt; có gần &lt;code&gt;69.55%&lt;/code&gt; dữ liệu bị thiếu và cột &lt;code&gt;Recovered&lt;/code&gt; có &lt;code&gt;7,14%&lt;/code&gt;. Vì vậy chúng ta cần xử lý các giá trị thiếu này:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Thay thế na thành 0 cho cột Recovered
final_df[&#39;Recovered&#39;] = final_df[&#39;Recovered&#39;].fillna(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Thay thế na thành Unknown cho cột Province/State
final_df[&amp;quot;Province/State&amp;quot;]= final_df[&amp;quot;Province/State&amp;quot;].fillna(&#39;Unknown&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra xem trong dữ liệu còn &lt;code&gt;missing values&lt;/code&gt; không:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df.isna().sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State    0
Country/Region    0
Lat               0
Long              0
Date              0
Confirmed         0
Deaths            0
Recovered         0
dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra kiểu dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(final_df.dtypes)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State            object
Country/Region            object
Lat                      float64
Long                     float64
Date              datetime64[ns]
Confirmed                  int64
Deaths                     int64
Recovered                float64
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thay đổi kiểu dữ liệu cho các cột &lt;code&gt;Confirmed, Deaths và Recovered&lt;/code&gt; thành &lt;code&gt;int&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df[[&amp;quot;Confirmed&amp;quot;,&amp;quot;Deaths&amp;quot;,&amp;quot;Recovered&amp;quot;]] = final_df[[&amp;quot;Confirmed&amp;quot;,&amp;quot;Deaths&amp;quot;,&amp;quot;Recovered&amp;quot;]].astype(int)
print(final_df.dtypes)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State            object
Country/Region            object
Lat                      float64
Long                     float64
Date              datetime64[ns]
Confirmed                  int32
Deaths                     int32
Recovered                  int32
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tạo thuộc tính mới &lt;code&gt;Active&lt;/code&gt; (Số trường hợp còn đang nhiễm sau khi đã trừ đi số trường hợp tử vong và hồi phục): 
$$Active = Confirmed - Deaths - Recovered$$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df[&#39;Active&#39;] = final_df[&#39;Confirmed&#39;] - final_df[&#39;Deaths&#39;] - final_df[&#39;Recovered&#39;]
print(final_df.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long       Date  Confirmed  \
0        Unknown    Afghanistan  33.93911  67.709953 2020-01-22          0   
1        Unknown        Albania  41.15330  20.168300 2020-01-22          0   
2        Unknown        Algeria  28.03390   1.659600 2020-01-22          0   
3        Unknown        Andorra  42.50630   1.521800 2020-01-22          0   
4        Unknown         Angola -11.20270  17.873900 2020-01-22          0   

   Deaths  Recovered  Active  
0       0          0       0  
1       0          0       0  
2       0          0       0  
3       0          0       0  
4       0          0       0  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra tổng số nước trên toàn thế giới trong tập dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;len(final_df[&#39;Country/Region&#39;].unique())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;188
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Tình hình Covid -19 trên toàn thế giới tính tới thời điểm đang viết bài này:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tổng các cases trên toàn thế giới:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = pd.DataFrame(pd.to_numeric(final_df[[&#39;Confirmed&#39;, &#39;Deaths&#39;, &#39;Recovered&#39;, &#39;Active&#39;]].sum()),dtype=np.float64).transpose()
df[&#39;Last date&#39;] = max(final_df[&#39;Date&#39;])
print(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      Confirmed      Deaths    Recovered       Active  Last date
0  1.468017e+09  66417411.0  782699851.0  618899989.0 2020-08-27
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tạo &lt;code&gt;Pie chart&lt;/code&gt; so sánh các cases trên toàn thế giới:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;labels = [&#39;Confirmed&#39;, &#39;Deaths&#39;, &#39;Recovered&#39;, &#39;Active&#39;]
colors = [&#39;gold&#39;, &#39;yellowgreen&#39;, &#39;lightcoral&#39;, &#39;lightskyblue&#39;]
explode = (0.1, 0, 0, 0)  # explode 1st slice
sizes = sum(df.loc[:, &#39;Confirmed&#39;:&#39;Active&#39;].values)
explode = (0.1, 0, 0, 0)  # explode 1st slice

# Plot
f = plt.figure(figsize=(8,8))
plt.pie(sizes, explode=explode, labels=labels, colors=colors,
autopct=&#39;%1.1f%%&#39;, shadow=True, startangle=140)
plt.axis(&#39;equal&#39;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_53_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;data-visualization&#34;&gt;2. Trực quan hóa dữ liệu&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2.1 Top 10 nước có số trường hợp (confirmed, deaths, recovered and active cases) lớn nhất&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tính tổng các &lt;code&gt;cases&lt;/code&gt; của từng nước tính đến thười điểm hiện tại:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_countries = final_df.copy().drop([&#39;Lat&#39;,&#39;Long&#39;,&#39;Province/State&#39;, &#39;Date&#39;],axis =1)
df_countries = df_countries.groupby([&amp;quot;Country/Region&amp;quot;]).sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;confirmed cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)
plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Confirmed&#39;)[&amp;quot;Confirmed&amp;quot;].index[-10:],df_countries.sort_values(&#39;Confirmed&#39;)[&amp;quot;Confirmed&amp;quot;].values[-10:],color=&amp;quot;darkcyan&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Confirmed Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Confirmed Cases)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_59_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Deaths&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)

plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Deaths&#39;)[&amp;quot;Deaths&amp;quot;].index[-10:],df_countries.sort_values(&#39;Deaths&#39;)[&amp;quot;Deaths&amp;quot;].values[-10:],color=&amp;quot;crimson&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Deaths Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Deaths)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_61_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Recovered Cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)

plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Recovered&#39;)[&amp;quot;Recovered&amp;quot;].index[-10:],df_countries.sort_values(&#39;Recovered&#39;)[&amp;quot;Recovered&amp;quot;].values[-10:],color=&amp;quot;limegreen&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Recovered Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Recovered Cases)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_63_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Active Cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)

plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Active&#39;)[&amp;quot;Active&amp;quot;].index[-10:],df_countries.sort_values(&#39;Active&#39;)[&amp;quot;Active&amp;quot;].values[-10:],color=&amp;quot;darkorange&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Active Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Active Cases)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_65_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1 Mức độ phát triển của Covid-19 theo thời gian trên toàn thế giới&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tính tổng các &lt;code&gt;cases&lt;/code&gt; trên toàn thế giới theo thời gian&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_world = final_df.groupby([&amp;quot;Date&amp;quot;])[[&amp;quot;Confirmed&amp;quot;,&amp;quot;Active&amp;quot;,&amp;quot;Recovered&amp;quot;,&amp;quot;Deaths&amp;quot;]].sum().reset_index()
df_world.set_index(&#39;Date&#39;,inplace=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Confirmed cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Confirmed&#39;],
        color=&#39;blue&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Confirmed cases&amp;quot;,
       title=&amp;quot;Confirmed Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_70_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Deaths&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Deaths&#39;],
        color=&#39;red&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Deaths&amp;quot;,
       title=&amp;quot;Deaths In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_72_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Recovered cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Recovered&#39;],
        color=&#39;purple&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Recovered cases&amp;quot;,
       title=&amp;quot;Recovered Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_74_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Active Cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.plot(df_world.index.values,
        df_world[&#39;Active&#39;],
        color= &#39;green&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Active Cases&amp;quot;,
       title=&amp;quot;Active Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_76_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hiển-thị-tất-cả-các-cases-trên-thế-giới-theo-thời-gian&#34;&gt;Hiển thị tất cả các cases trên thế giới theo thời gian&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(12, 6))

# Add x-axis and y-axis
ax.plot(df_world.index.values,
        df_world[&#39;Confirmed&#39;],
        color=&#39;blue&#39;, label = &#39;Confirmed Cases&#39;)

ax.plot(df_world.index.values,
        df_world[&#39;Deaths&#39;],
        color=&#39;red&#39;, label = &#39;Deaths&#39;)

ax.plot(df_world.index.values,
        df_world[&#39;Recovered&#39;],
        color=&#39;purple&#39;, label = &#39;Recovered Cases&#39;)


ax.plot(df_world.index.values,
        df_world[&#39;Active&#39;],
        color= &#39;green&#39;,  label= &#39;Active Cases&#39;)


# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Cases&amp;quot;,
       title=&amp;quot;COVID-19 Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.legend(loc=&amp;quot;upper left&amp;quot;)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_78_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tổng số lượng các quốc gia trên thế giới xuất hiện dịch bệnh Covid-19 theo thời gian&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;case_nums_country = df_confd.groupby(&amp;quot;Country/Region&amp;quot;).sum().drop([&#39;Lat&#39;,&#39;Long&#39;],axis =1).apply(lambda x: x[x &amp;gt; 0].count(), axis =0)
d = [datetime.strptime(date,&#39;%m/%d/%y&#39;).strftime(&amp;quot;%d %b&amp;quot;) for date in case_nums_country.index]
f = plt.figure(figsize=(10,5))
f.add_subplot(111)
marker_style = dict(c=&amp;quot;crimson&amp;quot;,linewidth=1, linestyle=&#39;-&#39;, marker=&#39;o&#39;,markersize=4, markerfacecolor=&#39;blue&#39;)
plt.plot(df_world.index.values, case_nums_country,**marker_style)
plt.setp(ax.get_xticklabels(), rotation=90)
plt.xlabel(&amp;quot;Dates&amp;quot;,fontsize=10)
plt.grid(alpha = 0.3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_80_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.3 So sánh sự phát triển của COVID-19 theo thời gian giữa các nước&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So sánh Việt Nam, Mỹ, Nga:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_Vietnam = final_df[final_df[&#39;Country/Region&#39;] == &#39;Vietnam&#39;]
df_Russia = final_df[final_df[&#39;Country/Region&#39;] == &#39;Russia&#39;]
df_US = final_df[final_df[&#39;Country/Region&#39;] == &#39;US&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do Mỹ và Nga cùng có số lượng các &lt;code&gt;cases&lt;/code&gt; lớn nên biểu thị vào cùng một biểu đồ:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(12, 6))

# Add x-axis and y-axis
ax.plot(df_US[&#39;Date&#39;],
        df_US[&#39;Confirmed&#39;],
        color=&#39;blue&#39;, label = &#39;Confirmed Cases of US&#39;)

ax.plot(df_US[&#39;Date&#39;],
        df_US[&#39;Active&#39;],
        &#39;-.&#39;,
        color=&#39;blue&#39;, label = &#39;Active Cases of US&#39;)

ax.plot(df_US[&#39;Date&#39;],
        df_US[&#39;Recovered&#39;],
        &#39;--&#39;,
        color=&#39;blue&#39;, label = &#39;Recovered Cases of US&#39;)

ax.plot(df_Russia[&#39;Date&#39;],
        df_Russia[&#39;Confirmed&#39;],
        color=&#39;red&#39;, label = &#39;Confirmed Cases of Russia&#39;)

ax.plot(df_Russia[&#39;Date&#39;],
        df_Russia[&#39;Active&#39;],
        &#39;-.&#39;,
        color=&#39;red&#39;, label = &#39;Active Cases of Russia&#39;)

ax.plot(df_Russia[&#39;Date&#39;],
        df_Russia[&#39;Recovered&#39;],
        &#39;--&#39;,
        color=&#39;red&#39;, label = &#39;Recovered Cases of Russia&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Cases&amp;quot;,
       title=&amp;quot;Confirmed Cases of COVID-19 of Russia vs US&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.legend(loc=&amp;quot;upper left&amp;quot;)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_84_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Việt nam có tổng số các &lt;code&gt;cases&lt;/code&gt; nhỏ hơn rất nhiều so với Russia và Mỹ nến nếu biểu thị vào cùng 1 biểu đồ thì sẽ rất khó nhìn. Do vậy tôi biểu diễn Việt Nam riêng:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig, ax = plt.subplots(figsize=(12, 6))

# Add x-axis and y-axis
ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Confirmed&#39;],
        color=&amp;quot;red&amp;quot;, label = &#39;Confirmed Cases of Vietnam&#39;)

ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Deaths&#39;],
        &#39;-.&#39;,
        color=&amp;quot;black&amp;quot;, label = &#39;Death Case of Vietnam&#39;)

ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Active&#39;],
        &#39;-.&#39;,
        color=&amp;quot;blue&amp;quot;, label = &#39;Active Cases of Vietnam&#39;)

ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Recovered&#39;],
        &#39;--&#39;,
        color=&amp;quot;green&amp;quot;, label = &#39;Recovered Cases of Vietnam&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Cases&amp;quot;,
       title=&amp;quot;COVID-19 cases of Vietnam&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.legend(loc=&amp;quot;upper left&amp;quot;)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_86_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Thử sử dụng jupyter notebook để viết posts cho blog. Machine Learning Project Template với Python</title>
      <link>/post/jupyter/</link>
      <pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/jupyter/</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Note lại các bước để viết posts cho blog sử dụng jupyter notebook&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bước 1: Tạo Jupyter notebook&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Tạo thư mục chứa post mới
mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/

# chuyển đến thư mục mới tạo
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/

# Tạo một jupyter notebook với tên là index
jupyter lab index.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Bước 2: Tạo post metadata&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cần tạo metadata cho post  ở cell đầu tiên của jupyter notebook như sau:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: My post&#39;s title
date: 2019-09-01

# Put any other metadata here...
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Bước 3: Convert notebook to Markdown&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2.  Machine Learning Project Template với Python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.1 Một Machine Learning Project sẽ gồm các bước cơ bản sau:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bước 1: Chuẩn bị vấn đề:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nạp các thư viện cần thiết&lt;/li&gt;
&lt;li&gt;Load tập dữ liệu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bước 2: Thăm dò dữ liệu (data exploring)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Thống kê mô tả&lt;/li&gt;
&lt;li&gt;Trực quan hóa dữ liệu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bước 3. Chuẩn bị dữ liệu&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Làm sạch dữ liệu (data cleaning)&lt;/li&gt;
&lt;li&gt;Lựa chọn và biến đổi thuộc tính&lt;/li&gt;
&lt;li&gt;Chuẩn hóa dữ liệu&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bước 4. Đánh giá các algorithms&lt;/p&gt;
&lt;p&gt;Bước 5. Impove accuracy&lt;/p&gt;
&lt;p&gt;Bước 6. Final model&lt;/p&gt;
&lt;h3 id=&#34;22-thực-hành-với-bài-toán-regresion&#34;&gt;2.2 Thực hành với bài toán Regresion&lt;/h3&gt;
&lt;h3 id=&#34;bước-1-chuẩn-bị-vấn-đề&#34;&gt;Bước 1. Chuẩn bị vấn đề&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Nạp các thư viện cần thiết
import numpy as np
from numpy import arange
import matplotlib.pyplot as plt
from pandas import read_csv
from pandas import set_option
#from pandas.tools.plotting import scatter_matrix
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import GridSearchCV
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn.linear_model import ElasticNet
from sklearn.tree import DecisionTreeRegressor
from sklearn.neighbors import KNeighborsRegressor
from sklearn.svm import SVR
from sklearn.pipeline import Pipeline
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import GradientBoostingRegressor
from sklearn.ensemble import ExtraTreesRegressor
from sklearn.ensemble import AdaBoostRegressor
from sklearn.metrics import mean_squared_error
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Load dữ liệu
url = &#39;https://raw.githubusercontent.com/svcuong/Datasets/master/boston.csv&#39;
dataset = read_csv(url, index_col=0)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Bước 2. Thăm dò dữ liệu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bước 2.1: Thống kê mô tả&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Kiểm tra kích thước dữ liệu
dataset.shape
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(506, 14)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Kiểm tra kiểu dữ liệu của thuộc tính
dataset.dtypes
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;crim       float64
zn         float64
indus      float64
chas         int64
nox        float64
rm         float64
age        float64
dis        float64
rad          int64
tax          int64
ptratio    float64
black      float64
lstat      float64
medv       float64
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# hiển thị 10 hàng dữ liệu đầu tiên
print(dataset.head(10))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;       crim    zn  indus  chas    nox     rm    age     dis  rad  tax  \
1   0.00632  18.0   2.31     0  0.538  6.575   65.2  4.0900    1  296   
2   0.02731   0.0   7.07     0  0.469  6.421   78.9  4.9671    2  242   
3   0.02729   0.0   7.07     0  0.469  7.185   61.1  4.9671    2  242   
4   0.03237   0.0   2.18     0  0.458  6.998   45.8  6.0622    3  222   
5   0.06905   0.0   2.18     0  0.458  7.147   54.2  6.0622    3  222   
6   0.02985   0.0   2.18     0  0.458  6.430   58.7  6.0622    3  222   
7   0.08829  12.5   7.87     0  0.524  6.012   66.6  5.5605    5  311   
8   0.14455  12.5   7.87     0  0.524  6.172   96.1  5.9505    5  311   
9   0.21124  12.5   7.87     0  0.524  5.631  100.0  6.0821    5  311   
10  0.17004  12.5   7.87     0  0.524  6.004   85.9  6.5921    5  311   

    ptratio   black  lstat  medv  
1      15.3  396.90   4.98  24.0  
2      17.8  396.90   9.14  21.6  
3      17.8  392.83   4.03  34.7  
4      18.7  394.63   2.94  33.4  
5      18.7  396.90   5.33  36.2  
6      18.7  394.12   5.21  28.7  
7      15.2  395.60  12.43  22.9  
8      15.2  396.90  19.15  27.1  
9      15.2  386.63  29.93  16.5  
10     15.2  386.71  17.10  18.9  
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# kiểm tra phân bố dữ liệu của từng thuộc tính
print(dataset.describe())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;             crim          zn       indus        chas         nox          rm  \
count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   
mean     3.613524   11.363636   11.136779    0.069170    0.554695    6.284634   
std      8.601545   23.322453    6.860353    0.253994    0.115878    0.702617   
min      0.006320    0.000000    0.460000    0.000000    0.385000    3.561000   
25%      0.082045    0.000000    5.190000    0.000000    0.449000    5.885500   
50%      0.256510    0.000000    9.690000    0.000000    0.538000    6.208500   
75%      3.677082   12.500000   18.100000    0.000000    0.624000    6.623500   
max     88.976200  100.000000   27.740000    1.000000    0.871000    8.780000   

              age         dis         rad         tax     ptratio       black  \
count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   
mean    68.574901    3.795043    9.549407  408.237154   18.455534  356.674032   
std     28.148861    2.105710    8.707259  168.537116    2.164946   91.294864   
min      2.900000    1.129600    1.000000  187.000000   12.600000    0.320000   
25%     45.025000    2.100175    4.000000  279.000000   17.400000  375.377500   
50%     77.500000    3.207450    5.000000  330.000000   19.050000  391.440000   
75%     94.075000    5.188425   24.000000  666.000000   20.200000  396.225000   
max    100.000000   12.126500   24.000000  711.000000   22.000000  396.900000   

            lstat        medv  
count  506.000000  506.000000  
mean    12.653063   22.532806  
std      7.141062    9.197104  
min      1.730000    5.000000  
25%      6.950000   17.025000  
50%     11.360000   21.200000  
75%     16.955000   25.000000  
max     37.970000   50.000000  
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Kiểm tra độ tương quan giữa các biến dạng numeric
print(dataset.corr(method = &#39;pearson&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;             crim        zn     indus      chas       nox        rm       age  \
crim     1.000000 -0.200469  0.406583 -0.055892  0.420972 -0.219247  0.352734   
zn      -0.200469  1.000000 -0.533828 -0.042697 -0.516604  0.311991 -0.569537   
indus    0.406583 -0.533828  1.000000  0.062938  0.763651 -0.391676  0.644779   
chas    -0.055892 -0.042697  0.062938  1.000000  0.091203  0.091251  0.086518   
nox      0.420972 -0.516604  0.763651  0.091203  1.000000 -0.302188  0.731470   
rm      -0.219247  0.311991 -0.391676  0.091251 -0.302188  1.000000 -0.240265   
age      0.352734 -0.569537  0.644779  0.086518  0.731470 -0.240265  1.000000   
dis     -0.379670  0.664408 -0.708027 -0.099176 -0.769230  0.205246 -0.747881   
rad      0.625505 -0.311948  0.595129 -0.007368  0.611441 -0.209847  0.456022   
tax      0.582764 -0.314563  0.720760 -0.035587  0.668023 -0.292048  0.506456   
ptratio  0.289946 -0.391679  0.383248 -0.121515  0.188933 -0.355501  0.261515   
black   -0.385064  0.175520 -0.356977  0.048788 -0.380051  0.128069 -0.273534   
lstat    0.455621 -0.412995  0.603800 -0.053929  0.590879 -0.613808  0.602339   
medv    -0.388305  0.360445 -0.483725  0.175260 -0.427321  0.695360 -0.376955   

              dis       rad       tax   ptratio     black     lstat      medv  
crim    -0.379670  0.625505  0.582764  0.289946 -0.385064  0.455621 -0.388305  
zn       0.664408 -0.311948 -0.314563 -0.391679  0.175520 -0.412995  0.360445  
indus   -0.708027  0.595129  0.720760  0.383248 -0.356977  0.603800 -0.483725  
chas    -0.099176 -0.007368 -0.035587 -0.121515  0.048788 -0.053929  0.175260  
nox     -0.769230  0.611441  0.668023  0.188933 -0.380051  0.590879 -0.427321  
rm       0.205246 -0.209847 -0.292048 -0.355501  0.128069 -0.613808  0.695360  
age     -0.747881  0.456022  0.506456  0.261515 -0.273534  0.602339 -0.376955  
dis      1.000000 -0.494588 -0.534432 -0.232471  0.291512 -0.496996  0.249929  
rad     -0.494588  1.000000  0.910228  0.464741 -0.444413  0.488676 -0.381626  
tax     -0.534432  0.910228  1.000000  0.460853 -0.441808  0.543993 -0.468536  
ptratio -0.232471  0.464741  0.460853  1.000000 -0.177383  0.374044 -0.507787  
black    0.291512 -0.444413 -0.441808 -0.177383  1.000000 -0.366087  0.333461  
lstat   -0.496996  0.488676  0.543993  0.374044 -0.366087  1.000000 -0.737663  
medv     0.249929 -0.381626 -0.468536 -0.507787  0.333461 -0.737663  1.000000  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Bước 2.2: Trực quan hóa dữ liệu&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Histograms cho từng thuộc tính
dataset.hist(figsize=(12,8))
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_21_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Boxplot cho từng thuộc tính
dataset.plot(kind=&#39;box&#39;, figsize=(12,5))
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_22_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# correlation matrix
fig = plt.figure(figsize=(14, 6))
ax = fig.add_subplot(111)
cax = ax.matshow(dataset.corr(), vmin=-1, vmax=1, interpolation=&#39;none&#39;)
fig.colorbar(cax)
ticks = numpy.arange(0,14,1)
ax.set_xticks(ticks)
ax.set_yticks(ticks)
ax.set_xticklabels(names)
ax.set_yticklabels(names)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_23_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bước 3: Chuẩn bị dữ liệu&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Split-out validation dataset
array = dataset.values
X = array[:,0:13]
Y = array[:,13]
validation_size = 0.20
seed = 7
X_train, X_validation, Y_train, Y_validation = train_test_split(X, Y,
test_size=validation_size, random_state=seed)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Bước 4: Đánh giá algorithms&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Test options and evaluation metric
num_folds = 10
seed = 7
scoring = &#39;neg_mean_squared_error&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Spot-Check Algorithms
models = []
models.append((&#39;LR&#39;, LinearRegression()))
models.append((&#39;LASSO&#39;, Lasso()))
models.append((&#39;EN&#39;, ElasticNet()))
models.append((&#39;KNN&#39;, KNeighborsRegressor()))
models.append((&#39;CART&#39;, DecisionTreeRegressor()))
models.append((&#39;SVR&#39;, SVR()))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import warnings
warnings.filterwarnings(&#39;ignore&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# evaluate each model in turn
results = []
names = []
for name, model in models:
    kfold = KFold(n_splits=num_folds, random_state=seed)
    cv_results = cross_val_score(model, X_train, Y_train, cv=kfold, scoring=scoring)
    results.append(cv_results)
    names.append(name)
    msg = &amp;quot;%s: %f (%f)&amp;quot; % (name, cv_results.mean(), cv_results.std())
    print(msg)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;LR: -21.379856 (9.414264)
LASSO: -26.423561 (11.651110)
EN: -27.502259 (12.305022)
KNN: -41.896488 (13.901688)
CART: -26.016351 (15.164680)
SVR: -67.827886 (29.049138)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Compare Algorithms
fig = pyplot.figure(figsize=(10, 6))
fig.suptitle(&#39;Algorithm Comparison&#39;)
ax = fig.add_subplot(111)
pyplot.boxplot(results)
ax.set_xticklabels(names)
pyplot.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_31_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bước 5: Improve Results With Tuning&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tôi sẽ hướng dẫn ở một bài khác&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bước 6: Finalize model&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tôi sẽ hướng dẫn ở một bài khác&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>А classification approach based on a combination of deep neural networks for predicting failures of complex multi-object systems</title>
      <link>/publication/moit2020/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/publication/moit2020/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Фреймворка для предсказательного моделирования отказов сложных многообъектных систем</title>
      <link>/publication/paten4/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/publication/paten4/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>STATISTICAL AND MACHINE LEARNING HIGH-FREQUENCY TIME SERIES FORECASTING METHODS IN AUTOMATIC MODE</title>
      <link>/publication/vkit2020/</link>
      <pubDate>Sun, 08 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/publication/vkit2020/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Failure prediction of complex multiple-component systems based on a combination of neural networks&#39;:&#39; Ways to improve the accuracy of forecasting</title>
      <link>/publication/hi-tech2020/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      <guid>/publication/hi-tech2020/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Architecture of predictive maintenance system of complex multi-object systems in Industry 4.0 concept</title>
      <link>/publication/swsys2020/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/publication/swsys2020/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PdM&#39;:&#39; A predictive maintenance modeling tool implemented as R-package and web-application</title>
      <link>/publication/soict2019/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      <guid>/publication/soict2019/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DEEP NEURAL NETWORKS FOR PREDICTIVE MAINTENANCE</title>
      <link>/publication/moit2019/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      <guid>/publication/moit2019/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data-Driven Framework for Predictive Maintenance in Industry 4.0 Concept</title>
      <link>/publication/citds2019/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/publication/citds2019/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Formats and Visual Tools for Forecast Evaluation</title>
      <link>/publication/preprint/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Data-driven method for remaining useful life prediction of complex multiple-component systems</title>
      <link>/publication/hi-tech2019/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      <guid>/publication/hi-tech2019/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data Schemas for Forecasting (with Examples in R)</title>
      <link>/publication/smart2018/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      <guid>/publication/smart2018/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generating Proactive Decisions Using a Method Based on LSTM and Classification</title>
      <link>/publication/%D0%BC%D0%BCe%D1%822018/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/publication/%D0%BC%D0%BCe%D1%822018/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On-the-Fly Multiple Sources Data Analysis in AR-Based Decision Support Systems</title>
      <link>/publication/dcnn2018/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      <guid>/publication/dcnn2018/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grammar for queries for heterogeneous data storage in proactive systems</title>
      <link>/publication/swsys2018/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      <guid>/publication/swsys2018/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Распределенная система слияния и преобработки разнородных данных с разных источников</title>
      <link>/publication/paten3/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      <guid>/publication/paten3/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mở đầu về khoa học dữ liệu. So sánh các khái niệm khái niệm Artificial Intelligence, Machine Learning và Deep Learning</title>
      <link>/post/2020-08-17-khai-niem-co-ban/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      <guid>/post/2020-08-17-khai-niem-co-ban/</guid>
      <description>&lt;p&gt;Khoa học dữ liệu (&lt;code&gt;data science&lt;/code&gt;, DS) là một trong những ngành đang có nhu cầu tuyển dụng cao ở thời điểm hiện tại cũng như trong tương lai xa. Nhà khoa học dữ liệu (data scientist) được 
&lt;a href=&#34;https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Harvard Business Review&lt;/a&gt; đánh giá là “công việc hấp dẫn nhất thế kỷ 21”.&lt;/p&gt;
&lt;p&gt;Vậy DS là gì? Trong thực tế một định nghĩa chính xác về DS không tồn tại, đây là một khái niệm liên ngành và rất rộng. DS là một lĩnh vực về các quá trình và các hệ thống trích rút tri thức hoặc hiểu biết dữ liệu ở các dạng khác nhau với biên độ rộng của các ngành như: Toán học, khoa học thống kê, khoa học thông tin, khoa học máy tính và lĩnh vực chuyên môn cụ thể. Bao gồm xử lý tín hiệu, lý thuyết xác suất thống kê, học máy, khai phá dữ liệu, cơ sở dữ liệu, kỹ thuật thông tin, nhận dạng mẫu, trực quan dữ liệu, các phân tích dự đoán, lý thuyết quyết định, kho dữ liệu, nén dữ liệu, lập trình máy tính, trí tuệ nhân tạo và siêu máy tính. Có thể nói &amp;ldquo;Một nhà khoa học dữ liệu là người giỏi hơn về thống kê so với những kỹ sư phát triển phần mềm và giỏi hơn về lập trình so với những nhà thống kê học.&amp;rdquo;  Về bản chất có thể hiểu khoa học dữ liệu là ngành giúp chúng ta tạo ra giá trị từ dữ liệu với hai nhiệm vụ chính:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Thu thập  và xử lý dữ liệu để tìm ra những insights có giá trị.&lt;/li&gt;
&lt;li&gt;Giải thích, trình bày những insights đó cho các bên có liên quan để chuyển hóa isights thành hành động.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Xuât phát từ tên gọi DS ta có hai thành phần cấu thành là &lt;em&gt;data&lt;/em&gt; và &lt;em&gt;science&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data:&lt;/strong&gt; Là thành phần thứ nhất của cụm từ data science, thiếu nó thì tất cả các quá trình tiếp theo đều không thể thực hiện. Sau khi đã có đầy đủ dữ liệu cần thiết, trước khi sử dụng, công việc đầu tiên bạn cần làm là làm sạch và biến đổi dữ liệu - bước quan trọng nhất trong phân tích dữ liệu, nó chiếm đến 80% tổng số thời gian thực hiện phân tích.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Science:&lt;/strong&gt; Chúng ta đã có dữ liệu vậy bây giờ làm gì với chúng? Đó là phân tích, trích rút các quy luật có ích và làm sao có để có thể sử dụng chúng một cách hiệu quả. Ở đây các lĩnh vực sẽ giúp chúng ta như là thống kê, máy học, học sâu, tối ưu. Máy học giúp chúng ta tìm ra các quy luật trong dữ liệu để có thể dự báo thông tin cần thiết với đối tượng mói sau đó.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DS và trí tuệ nhân tạo (&lt;code&gt;Artificial Intelligence&lt;/code&gt;, AI) thường bị đánh tráo khái niệm. Để phân biệt chính xác khái niệm về hai công nghệ này cũng như các khái niệm trong AI, các bạn hãy cùng tham khảo bài viết nhé! Cuối bài tôi sẽ giới thiệu 1 số ngôn ngữ lập trình cho khoa học dữ liệu.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;1 Phân biệt các khái niệm Data Scinece, Artificial Intelligence, machine learning và deep learning&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thực ra các lĩnh vực này đều có sự liên quan, chồng chéo đan xen với nhau. &lt;code&gt;AI&lt;/code&gt; là một trong các công cụ cho DS. &lt;code&gt;DS&lt;/code&gt; sử dụng &lt;code&gt;AI&lt;/code&gt; trong các hoạt động của mình, tuy nhiên chắc chắn nó không bao hàm AI. Hay nói cách khác trong DS có sự đóng góp bởi một số khía cạnh của AI nhưng lại không phản ánh tất cả về &lt;code&gt;AI&lt;/code&gt;. Hình dưới đây mô tả mối quan hệ của các khái niệm này:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/2020-08-17-khai-niem-co-ban_files/1_-XKVI5SAEpffNR7BusdvNQ.png&#34; alt=&#34;&#34;&gt;

&lt;a href=&#34;https://medium.com/ai-in-plain-english/data-science-vs-artificial-intelligence-vs-machine-learning-vs-deep-learning-50d3718d51e5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source: Gmggroup.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AI&lt;/code&gt; là một ngành khoa học được sinh ra với mục đích nhằm làm cho máy móc do con người tạo ra có những khả năng của trí tuệ và trí thông  minh của con người - &lt;code&gt;thông minh nhân tạo&lt;/code&gt;, tiêu biểu như biết suy nghĩ và lập luận để giải quyết vấn đề, biết giao tiếp do hiểu ngôn ngữ và tiếng nói, biết học và tự thích nghi,&amp;hellip;. Ý tưởng về &lt;code&gt;AI&lt;/code&gt; xuất hiện vào những năm 1950 khi một nhóm những người tiên phong trong lĩnh vực khoa học máy tính non trẻ tự đặt ra cho mình câu hỏi, liệu có thể làm cho máy tính biết &lt;code&gt;suy nghĩ&lt;/code&gt;? - hệ quả của câu hỏi đó chính là những gì chúng ta đang học trong ngày hôm nay. &lt;code&gt;Machine Learning&lt;/code&gt; và &lt;code&gt;Deep Learning&lt;/code&gt; chính là phương tiện, công cụ để đạt được mục tiêu của &lt;code&gt;AI&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Để hiểu về  &lt;code&gt;Machine Learning&lt;/code&gt; và &lt;code&gt;Deep Learning&lt;/code&gt; trước hết chúng ta hãy cùng tìm hiểu khái niệm  học biểu diễn (&lt;code&gt;representation learning&lt;/code&gt;) từ dữ liệu. Trong cuộc sống hàng ngày, hầu hết chúng ta đã quen thuộc với việc mô tả các sự vật, hiện tượng của thế giới bên ngoài qua các khái niệm, các con số, các giác quan,&amp;hellip; Nhưng mô tả đó được gọi là các biểu diễn (&lt;code&gt;representation&lt;/code&gt;) của sự vật, hiện tượng. Máy học (&lt;code&gt;machine learning&lt;/code&gt;) cũng vậy, mục đích của nó là tìm cách biến đổi dữ liệu đầu vào thành các đầu ra có ý nghĩa. Hay nói một cách khoa học, một mô hình &lt;code&gt;machine learning&lt;/code&gt; sẽ ánh xạ dữ liệu từ một không gian biểu diễn vào một không gian biểu diễn khác mà trên đó chúng ta có thể hiểu rõ hơn về dữ liệu ban đầu. Chính vì vậy &lt;code&gt;machine learning&lt;/code&gt; được gọi là học biểu diễn (&lt;code&gt;representation learning&lt;/code&gt;). Cách học này đã tạo ra một &lt;code&gt;new programming paradigm&lt;/code&gt;. Trong lập trình truyền thống, con người nhập các quy tắc &lt;code&gt;rules&lt;/code&gt; (program) và dữ liệu để xử lý theo các quy tắc đó để thu được &lt;code&gt;answers&lt;/code&gt;. Còn trong &lt;code&gt;Machine learning&lt;/code&gt; thì con người sẽ nhập dữ liệu và &lt;code&gt;answers&lt;/code&gt; tương ứng với dữ liệu đó, còn ở đầu ra sẽ thu được các &lt;code&gt;rules&lt;/code&gt; - các mô hình &lt;code&gt;machine learning&lt;/code&gt;. Các mô hình này sau đó có thể sử dụng cho dữ liệu mới để thu được các &lt;code&gt;answers&lt;/code&gt;. Trong &lt;code&gt;machine learning&lt;/code&gt; hệ thống sẽ được huấn luyện thay vì lập trình rõ ràng. Nhiệm vụ chính của &lt;code&gt;Machine learning&lt;/code&gt; chính là tự động tìm các phương pháp biến đổi dữ liệu đầu vào. Các phương pháp này có thể là thay đổi hệ tọa độ, hay là xử dụng các phép chiếu,&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/ml-dl-1.PNG&#34; alt=&#34;Machine Learning - A new programming paradim&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cùng một sự vật, hiện tượng có thể có nhiều cách biểu diễn khác nhau. &lt;code&gt;Deep Learning&lt;/code&gt; ở đây cũng vậy, nó chính là một ngành nhỏ của &lt;code&gt;Machine Learning&lt;/code&gt;: xử dụng cách tiếp cận mởi để tìm kiếm phương thức biểu diễn dữ liệu - bằng cách học liên tiếp các qua các lớp (&lt;code&gt;layers&lt;/code&gt;) hay gọi là mạng thần kinh nhân tạo (&lt;code&gt;Neural Network&lt;/code&gt;). Chữ &lt;code&gt;Deep&lt;/code&gt; trong &lt;code&gt;Deep Learning&lt;/code&gt; không có nghĩa là phương pháp này cho phép hiểu sâu hơn, mà chỉ để thể hiện cách biểu diễn dữ liệu qua nhiều lớp. Số lượng các lớp tạo thành một mô hình deep learning được gọi là chiều sâu (&lt;code&gt;depth&lt;/code&gt;) của mô hình đó.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;2 Ngôn ngữ lập trình cho khoa học dữ liệu&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Chọn ngôn ngữ nào để bắt đầu sự nghiệp Khoa học dữ liệu sẽ có nhiều thử thách đối với bạn. Có một số ngôn ngữ phục vụ cho ngành này phải kể đến những ngôn ngữ lập trình sau:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;: là một trong những platforms mạnh cho học máy, thống kê và phân tích dữ liệu được phát triển và sử dụng bởi các nhà khoa học thống kê và phân tích dữ liệu hàng đầu trên thế giới. Nếu bạn muốn đi sâu vào phân tích dữ liệu và thống kê, thì R là ngôn ngữ dành cho bạn.Ngôn ngữ này đã có sự tăng trưởng vượt bậc khi phân tích dữ liệu và khoa học dữ liệu trở nên phổ biến hơn trong những năm gần đây. Hàng năm, số lượng người dùng R tăng hơn 40% và ngày càng có nhiều cơ quan và tổ chức sử dụng R trong hoạt động phân tích thường nhật Tuy nhiên trong thời rian gần đây độ phổ biến của nó đã giảm đi một chút.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python:&lt;/strong&gt; là một ngôn ngữ lập trình đa mục đích, khá mạnh và bao gồm các công cụ có thể ứng dụng vào các môi trường yêu cầu hình tượng hoá mà có thể xuất hiện trên các trang web hoặc trên điện thoại.  Python cung cấp hỗ trợ cho một số lượng lớn các thư viện học sâu như Pandas, Matplotlib, Tensorflow, Keras, scikit-learn, v.v. Để bắt đầu với ngành Data Science. Python là một trong những ngôn ngữ lập trình lý tưởng và nó cũng dễ đọc hơn R.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java:&lt;/strong&gt; Ngôn ngữ lập trình Java gần đây được xếp hạng một trong những ngôn ngữ được yêu thích và đa năng nhất để viết, dựa vào bản khảo sát từ WP Engine. Nó cũng là một ngôn ngữ lập trình đa mục đích, được thiết kế riêng để càng ít phụ thuộc vào việc thực thi càng tốt. Nó có thể được sử dụng để xây dựng mọi thứ, đặc biệt là các nền tảng có thể mở rộng, nền tảng đa luồng (multithread) và có nền tảng người dùng mạnh mẽ. ác framework như Apache Spark, Hadoop và Hive ngày càng phổ biến trong môi trường thương mại, làm cho Java trở thành một trong những ngôn ngữ được các nhà khoa học dữ liệu yêu cầu. Kiến thức về Java sẽ tạo điều kiện cho bạn điều chỉnh và duy trì các nền tảng dữ liệu lớn như Hadoop được viết bằng cùng một ngôn ngữ.&lt;/p&gt;
&lt;p&gt;Ngoài ra còn một số ngôn ngữ khác như là Julia, Scala, &amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Tham khảo:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;sub&gt;
&lt;a href=&#34;https://medium.com/ai-in-plain-english/data-science-vs-artificial-intelligence-vs-machine-learning-vs-deep-learning-50d3718d51e5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The differences between Data Science, Artificial Intelligence, Machine Learning, and Deep Learning&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Программа расчета асимптотических оценок показателей эффективностей системы эксплуатационного котроля объекта авиационной техники</title>
      <link>/publication/paten2/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      <guid>/publication/paten2/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Программа расчета статистических оценок показателей эффективностей системы эксплуатационного котроля объекта авиационной техники</title>
      <link>/publication/paten1/</link>
      <pubDate>Tue, 21 Jun 2016 00:00:00 +0000</pubDate>
      <guid>/publication/paten1/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code and math&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
