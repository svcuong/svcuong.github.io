<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tensorflow | Khoa Học Dữ Liệu</title>
    <link>/tag/tensorflow/</link>
      <atom:link href="/tag/tensorflow/index.xml" rel="self" type="application/rss+xml" />
    <description>Tensorflow</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>vi-en</language><copyright>© 2020 Cuong Sai. All Rights Reserved</copyright><lastBuildDate>Tue, 01 Sep 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu47efca792e1e7000f9078d7b8f1dac48_31011_512x512_fill_lanczos_center_2.PNG</url>
      <title>Tensorflow</title>
      <link>/tag/tensorflow/</link>
    </image>
    
    <item>
      <title>Cách dùng keras và tensorflow trong R. So sánh R interface và Python interface cho keras.</title>
      <link>/post/r-python-machine-learning/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      <guid>/post/r-python-machine-learning/</guid>
      <description>


&lt;hr /&gt;
&lt;p&gt;Nội dung của bài bao gồm:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#sec1&#34;&gt;1. Cài đặt môi trường làm việc để kết hợp R và Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#sec2&#34;&gt;2. So sánh R interface và Python interface cho keras với bài toán MNIST nổi tiếng&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;div id=&#34;sec1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;1 Cài đặt&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1.1 Cài đặt keras và tensorflow trong R&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Để cài đặt Keras và Tensorflow trong R các bạn dùng các lệnh sau:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;keras&amp;quot;)
install.packages(“tensorflow”)
library(keras)
install_keras()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;1.2 Cài đặt keras và tensorflow trong Python (sử dụng anaconda)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Để làm việc về khoa học dữ liệu với ngôn ngữ &lt;code&gt;Python&lt;/code&gt;, một cách đơn giản nhất là tải về và cài đặt &lt;code&gt;Anaconda&lt;/code&gt; - nền tảng (&lt;code&gt;platform&lt;/code&gt;) mã nguồn mở về khoa học dữ liệu thông dụng nhất hiện nay hỗ trợ làm việc với &lt;code&gt;Python&lt;/code&gt; và &lt;code&gt;R&lt;/code&gt;. Nếu chưa biết cách sử dụng &lt;code&gt;R&lt;/code&gt; trong &lt;code&gt;Anaconda&lt;/code&gt; thì các bạn có thể đọc bài hướng dẫn trước tại &lt;a href=&#34;https://svcuong.github.io/post/r-jupyter/r-jupyter/&#34;&gt;đây&lt;/a&gt;. Download và cài đặt &lt;code&gt;Anaconda&lt;/code&gt; tại &lt;a href=&#34;https://www.anaconda.com/products/individual&#34;&gt;đây&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Lưu ý:&lt;/code&gt; trong khi cài các đặt bạn nhớ là tích vào mục &lt;code&gt;Add Anaconda to my PATH environment variable&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/conda0.PNG&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sau khi đã cài xong &lt;code&gt;Anaconda&lt;/code&gt;, các bạn vào &lt;code&gt;Anaconda Prompt&lt;/code&gt; để tạo một môi trường mới chứa các thư viện cần thiết như sau:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;conda create -n r-env python=3.7 scikit-learn pandas numpy matplotlib keras tensorflow&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/conda1.PNG&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Câu lệnh trên có nghĩa là:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Khởi tạo môi trường anaconda mới với tên &lt;code&gt;r-env&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Cài &lt;code&gt;python&lt;/code&gt; phiên bản 3.7 với các thư viện scikit-learn, pandas, numpy, matplotlib, keras và tensorflow cho môi trường này&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kiểm tra xem môi trường &lt;code&gt;r-env&lt;/code&gt; đã được tạo trong &lt;code&gt;Anaconda&lt;/code&gt; chưa bằng lệnh &lt;code&gt;conda env list&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/conda2.PNG&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.3 Thiết lập môi trường làm việc để sử dụng kết hợp R và Python trong R&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Để sử dụng &lt;code&gt;Python&lt;/code&gt; trong &lt;code&gt;R&lt;/code&gt; chúng ta sử dụng gói &lt;code&gt;reticulate&lt;/code&gt;. Để biết cách kết hợp &lt;code&gt;R&lt;/code&gt; và &lt;code&gt;Python&lt;/code&gt; trong &lt;code&gt;R&lt;/code&gt; các bạn có thể đọc bài trước tại &lt;a href=&#34;https://svcuong.github.io/post/s-d-ng-k-t-h-p-r-va-python-trong-data-science/&#34;&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nạp thư viện &lt;code&gt;reticulate&lt;/code&gt; và sử dụng hàm &lt;code&gt;conda_list()&lt;/code&gt; để kiểm tra danh sách môi trường &lt;code&gt;Anaconda&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(reticulate)
conda_list()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    name                                               python
## 1 r-env C:\\Users\\svcuo\\Anaconda3\\envs\\r-env\\python.exe&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vậy là đã có môi trường &lt;code&gt;r-env&lt;/code&gt; mới khởi tạo. Để chọn môi trường này sử dụng trong &lt;code&gt;R&lt;/code&gt; chúng ta sử dụng hàm &lt;code&gt;use_condaenv()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;use_condaenv(&amp;quot;r-env&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sec2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;2. So sánh R interface và Python interface cho keras với bài toán MNIST nổi tiếng&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Chú ý&lt;/code&gt;: do sử dụng kết hợp &lt;code&gt;R&lt;/code&gt; và &lt;code&gt;Python&lt;/code&gt; trong cùng một &lt;code&gt;R Notebook&lt;/code&gt; nên tôi sẽ chú thích &lt;code&gt;R&lt;/code&gt; với mỗi &lt;code&gt;R code chunk&lt;/code&gt; và &lt;code&gt;Python&lt;/code&gt; với mỗi &lt;code&gt;Python code chunk&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;sử-dụng-r-interface-cho-keras&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;2.1 Sử dụng R interface cho keras&lt;/h4&gt;
&lt;p&gt;Nạp tập dữ liệu &lt;code&gt;MNIST&lt;/code&gt; từ &lt;code&gt;keras&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
library(keras)
mnist &amp;lt;- dataset_mnist()
train_images &amp;lt;- mnist$train$x
train_labels &amp;lt;- mnist$train$y
test_images &amp;lt;- mnist$test$x
test_labels &amp;lt;- mnist$test$y&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra dữ liệu:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
dim(train_images)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 60000    28    28&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(train_labels)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 60000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(test_images)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 10000    28    28&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(test_labels)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 10000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thử hiển thị 5th digit:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
digit &amp;lt;- train_images[5,,]
plot(as.raster(digit, max = 255))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/r-python-machine-learning/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;
&lt;strong&gt;Hướng dẫn thao tác với tensors trong R:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
slice1 &amp;lt;- train_images[10:99,,]
dim(slice1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 90 28 28&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
slice2 &amp;lt;- train_images[10:99,1:28,1:28]
dim(slice2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 90 28 28&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;slice3 &amp;lt;- train_images[, 15:28, 15:28]
dim(slice3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 60000    14    14&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Thiết kế cấu trúc network model:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
model &amp;lt;- keras_model_sequential() %&amp;gt;%
  layer_dense(units = 512, activation = &amp;quot;relu&amp;quot;, input_shape = c(28 * 28)) %&amp;gt;%
  layer_dense(units = 10, activation = &amp;quot;softmax&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Model Summary :&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# R code
summary(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Model: &amp;quot;sequential&amp;quot;
## ________________________________________________________________________________
## Layer (type)                        Output Shape                    Param #     
## ================================================================================
## dense (Dense)                       (None, 512)                     401920      
## ________________________________________________________________________________
## dense_1 (Dense)                     (None, 10)                      5130        
## ================================================================================
## Total params: 407,050
## Trainable params: 407,050
## Non-trainable params: 0
## ________________________________________________________________________________&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bước tiếp theo, compile model với &lt;code&gt;loss function, optimizer và metrics&lt;/code&gt; tương ứng:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% compile(
  optimizer = &amp;quot;rmsprop&amp;quot;,
  loss = &amp;quot;categorical_crossentropy&amp;quot;,
  metrics = c(&amp;quot;accuracy&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Chuẩn bị dữ liệu để huấn luyện mô hình:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_images &amp;lt;- array_reshape(train_images, c(60000, 28 * 28))
train_images &amp;lt;- train_images / 255
test_images &amp;lt;- array_reshape(test_images, c(10000, 28 * 28))
test_images &amp;lt;- test_images / 255&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_labels &amp;lt;- to_categorical(train_labels)
test_labels &amp;lt;- to_categorical(test_labels)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Huấn luyện mô hình:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% fit(
  train_images, 
  train_labels, 
  epochs = 5, 
  batch_size = 128)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Đánh giá độ chính xác của mô hình:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metrics &amp;lt;- model %&amp;gt;% evaluate(test_images, test_labels)
metrics&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $loss
## [1] 0.06532291
## 
## $accuracy
## [1] 0.9802&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dự đoán với dữ liệu mới:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;model %&amp;gt;% predict_classes(test_images[1:10,])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] 7 2 1 0 4 1 4 9 5 9&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2.2 Sử dụng Python interface cho keras trong môi trường R&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nạp tập dữ liệu &lt;code&gt;MNIST&lt;/code&gt; từ &lt;code&gt;keras&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
from keras.datasets import mnist&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using TensorFlow backend.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;(train_images, train_labels), (test_images, test_labels) = mnist.load_data()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra dữ liệu:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
train_images.shape&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (60000, 28, 28)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
train_labels.shape&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (60000,)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
test_images.shape&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (10000, 28, 28)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
test_labels.shape&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## (10000,)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Thiết kế cấu trúc network model:&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
from keras import models
from keras import layers

model = models.Sequential()
model.add(layers.Dense(512, activation=&amp;#39;relu&amp;#39;, input_shape=(28 * 28,)))
model.add(layers.Dense(10, activation=&amp;#39;softmax&amp;#39;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Compile model với &lt;code&gt;loss function, optimizer và metrics&lt;/code&gt; tương ứng:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
model.compile(optimizer=&amp;#39;rmsprop&amp;#39;,
loss=&amp;#39;categorical_crossentropy&amp;#39;,
metrics=[&amp;#39;accuracy&amp;#39;])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Chuẩn bị dữ liệu để huấn luyện mô hình:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
train_images = train_images.reshape((60000, 28 * 28))
train_images = train_images.astype(&amp;#39;float32&amp;#39;) / 255
test_images = test_images.reshape((10000, 28 * 28))
test_images = test_images.astype(&amp;#39;float32&amp;#39;) / 255&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
from keras.utils import to_categorical
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Huấn luyện mô hình:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
model.fit(train_images, train_labels, epochs=5, batch_size=128)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Đánh giá độ chính xác của mô hình:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
test_loss, test_acc = model.evaluate(test_images, test_labels)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;print(&amp;#39;test_acc:&amp;#39;, test_acc)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## test_acc: 0.980400025844574&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dự đoán với dữ liệu mới:&lt;/p&gt;
&lt;pre class=&#34;python&#34;&gt;&lt;code&gt;# Python
model.predict_classes(test_images[:10,:])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## array([7, 2, 1, 0, 4, 1, 4, 9, 5, 9], dtype=int64)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
