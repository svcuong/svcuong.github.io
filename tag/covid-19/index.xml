<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Covid-19 | Cuong Sai</title>
    <link>/tag/covid-19/</link>
      <atom:link href="/tag/covid-19/index.xml" rel="self" type="application/rss+xml" />
    <description>Covid-19</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Cuong Sai. All Rights Reserved</copyright><lastBuildDate>Sat, 29 Aug 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu47efca792e1e7000f9078d7b8f1dac48_31011_512x512_fill_lanczos_center_2.PNG</url>
      <title>Covid-19</title>
      <link>/tag/covid-19/</link>
    </image>
    
    <item>
      <title>Biến đổi và trực quan hóa dữ liệu Covid-19 từ John Hopkins database với R</title>
      <link>/post/covid-19-r/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/covid-19-r/</guid>
      <description>


&lt;p&gt;&lt;code&gt;Covid-19&lt;/code&gt; là một đại dịch bệnh truyền nhiễm với tác nhân là virus &lt;code&gt;SARS-CoV-2&lt;/code&gt;, hiện đang ảnh hưởng và gây thiệt hại nặng nề trên phạm vi toàn cầu. Kể từ khi đại dịch &lt;code&gt;Covid-19&lt;/code&gt; bắt đầu xuất hiện ở Vũ Hán - Trung Quốc đến nay, cái tên trường Đại học &lt;code&gt;Jonhs Hopkins&lt;/code&gt; (Mỹ) được nhắc đi nhắc lại hằng ngày trên các phương tiện truyền thông và là một trong những cụm từ được trích dẫn nhiều nhất. Lý do đó là Đại học &lt;code&gt;Johns Hopkins&lt;/code&gt; đã phát triển một trong những hệ thống theo dõi dữ liệu &lt;code&gt;COVID-19&lt;/code&gt; bền bỉ và đáng tin cậy nhất trên thế giới cho đến nay.&lt;/p&gt;
&lt;p&gt;Ở bài trước tôi đã giới thiệu cách download và trực quan hóa dữ liệu &lt;code&gt;Covid-19&lt;/code&gt; từ &lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34;&gt;John Hopkins database&lt;/a&gt; sử dụng ngôn ngữ &lt;code&gt;Python&lt;/code&gt;, cụ thể là sử dụng thư viện &lt;code&gt;pandas&lt;/code&gt; để làm sạch và biến đổi dữ liệu và &lt;code&gt;maplotlib&lt;/code&gt; để trực quan hóa dữ liệu. Ở bài này để chứng minh &lt;code&gt;R&lt;/code&gt; là ngôn ngữ nổi trội trong biến đổi và trực quan hóa dữ liệu, tôi cũng thực hiện công việc tương tự như với &lt;code&gt;Python&lt;/code&gt;. Cụ thể là sử dụng thư viện &lt;code&gt;dplyr&lt;/code&gt; và &lt;code&gt;ggplot2&lt;/code&gt; trong hệ sinh thái &lt;code&gt;tidyverse&lt;/code&gt; kết hợp với toán tử &lt;code&gt;pipes&lt;/code&gt; khiến cho việc làm sạch, biến đổi và trực quan hóa dữ liệu trở nên vô cùng đơn giản - chỉ bằng vài dòng &lt;code&gt;code&lt;/code&gt;. Để so sánh sự khác biệt các bạn có thể đọc lại bài trước về &lt;code&gt;Python&lt;/code&gt; tại &lt;a href=&#34;https://svcuong.github.io/post/covid-19-python/&#34;&gt;đây&lt;/a&gt;. Để biết thêm về toán tử pipe &lt;code&gt;%&amp;gt;%&lt;/code&gt; cũng như cách dùng các &lt;code&gt;pipes&lt;/code&gt; khác trong &lt;code&gt;R&lt;/code&gt; các bạn có thể đọc tại &lt;a href=&#34;https://svcuong.github.io/post/pipes/&#34;&gt;đây&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nội dung chính của bài bao gồm:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#sec1&#34;&gt;1. Download &amp;amp; chuẩn bị dữ liệu Covid-19 sử dụng thư viện dplyr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#sec2&#34;&gt;2. Trực quan hóa dữ liệu Covid-19 sử dụng thư viện ggplot2&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;sec1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;1. Download và chuẩn bị dữ liệu&lt;/h2&gt;
&lt;p&gt;Nạp gói &lt;code&gt;tidyverse&lt;/code&gt; vào phiên làm việc của &lt;code&gt;R&lt;/code&gt; để thực hành:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download 3 tập dữ liệu từ &lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34;&gt;John Hopkins database&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Confirmed:&lt;/code&gt; (Số trường hợp mới phát hiện)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Deaths:&lt;/code&gt; (Số trường hợp tử vong)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Recovered:&lt;/code&gt; (Số trường hợp hồi phục)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;url_confd = &amp;#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&amp;#39;
url_death = &amp;#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&amp;#39;
url_recvd = &amp;#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv&amp;#39;

df_confd_raw = read.csv(url_confd)
df_death_raw = read.csv(url_death)
df_recvd_raw = read.csv(url_recvd)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Các tập dữ liệu này được lưu ở dạng &lt;code&gt;wide format&lt;/code&gt; do đó chúng ta cần chuyển chúng dạng &lt;code&gt;long fromat&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Chuyển tập dữ liệu df_confd từ wide format sang long fromat
df_confd &amp;lt;- df_confd_raw %&amp;gt;% gather(key=&amp;quot;Date&amp;quot;, value=&amp;quot;Confirmed&amp;quot;, -c(Country.Region, Province.State, Lat, Long)) %&amp;gt;% group_by(Country.Region, Date) %&amp;gt;% summarize(Confirmed=sum(Confirmed))

# Chuyển tập dữ liệu df_death từ wide format sang long fromat
df_death &amp;lt;- df_death_raw %&amp;gt;% gather(key=&amp;quot;Date&amp;quot;, value=&amp;quot;Deaths&amp;quot;, -c(Country.Region, Province.State, Lat, Long)) %&amp;gt;% group_by(Country.Region, Date) %&amp;gt;% summarize(Deaths=sum(Deaths))


# Chuyển tập dữ liệu df_recvd từ wide format sang long fromat
df_recvd &amp;lt;- df_recvd_raw %&amp;gt;% gather(key=&amp;quot;Date&amp;quot;, value=&amp;quot;Recovered&amp;quot;, -c(Country.Region, Province.State, Lat, Long)) %&amp;gt;% group_by(Country.Region, Date) %&amp;gt;% summarize(Recovered=sum(Recovered))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra dữ liệu sau khi đã chuyển:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(df_confd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
## # Groups:   Country.Region [1]
##   Country.Region Date     Confirmed
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;
## 1 Afghanistan    X1.22.20         0
## 2 Afghanistan    X1.23.20         0
## 3 Afghanistan    X1.24.20         0
## 4 Afghanistan    X1.25.20         0
## 5 Afghanistan    X1.26.20         0
## 6 Afghanistan    X1.27.20         0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(df_death)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
## # Groups:   Country.Region [1]
##   Country.Region Date     Deaths
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;     &amp;lt;int&amp;gt;
## 1 Afghanistan    X1.22.20      0
## 2 Afghanistan    X1.23.20      0
## 3 Afghanistan    X1.24.20      0
## 4 Afghanistan    X1.25.20      0
## 5 Afghanistan    X1.26.20      0
## 6 Afghanistan    X1.27.20      0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(df_recvd)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
## # Groups:   Country.Region [1]
##   Country.Region Date     Recovered
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;
## 1 Afghanistan    X1.22.20         0
## 2 Afghanistan    X1.23.20         0
## 3 Afghanistan    X1.24.20         0
## 4 Afghanistan    X1.25.20         0
## 5 Afghanistan    X1.26.20         0
## 6 Afghanistan    X1.27.20         0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gộp 3 tập dữ liệu này thành 1 &lt;code&gt;dataframe&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_df &amp;lt;- full_join(df_confd, df_death) %&amp;gt;% full_join(df_recvd)
head(final_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
## # Groups:   Country.Region [1]
##   Country.Region Date     Confirmed Deaths Recovered
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt;     &amp;lt;int&amp;gt;
## 1 Afghanistan    X1.22.20         0      0         0
## 2 Afghanistan    X1.23.20         0      0         0
## 3 Afghanistan    X1.24.20         0      0         0
## 4 Afghanistan    X1.25.20         0      0         0
## 5 Afghanistan    X1.26.20         0      0         0
## 6 Afghanistan    X1.27.20         0      0         0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Chuyển cột dữ liệu &lt;code&gt;Date&lt;/code&gt; về định dạng &lt;code&gt;date&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_df$Date &amp;lt;- final_df$Date %&amp;gt;% sub(&amp;quot;X&amp;quot;, &amp;quot;&amp;quot;,.)%&amp;gt;% as.Date(&amp;quot;%m.%d.%y&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra &lt;code&gt;dataframe&lt;/code&gt; thu được:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(final_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
## # Groups:   Country.Region [1]
##   Country.Region Date       Confirmed Deaths Recovered
##   &amp;lt;chr&amp;gt;          &amp;lt;date&amp;gt;         &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt;     &amp;lt;int&amp;gt;
## 1 Afghanistan    2020-01-22         0      0         0
## 2 Afghanistan    2020-01-23         0      0         0
## 3 Afghanistan    2020-01-24         0      0         0
## 4 Afghanistan    2020-01-25         0      0         0
## 5 Afghanistan    2020-01-26         0      0         0
## 6 Afghanistan    2020-01-27         0      0         0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra kích thước của bảng dữ liệu thu được:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dim(final_df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 41548     5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra khoảng thời gian của dữ liệu được thu thập:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(paste(&amp;#39;First date:&amp;#39;, min(final_df$Date)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;First date: 2020-01-22&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(paste(&amp;#39;Current date:&amp;#39;, max(final_df$Date)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Current date: 2020-08-29&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra &lt;code&gt;missing values (NaN)&lt;/code&gt; trong tập dữ liệu:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colSums(is.na(final_df))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Country.Region           Date      Confirmed         Deaths      Recovered 
##              0              0              0              0              0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sec2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;2. Trực quan hóa dữ liệu với &lt;code&gt;ggplot2&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2.1 Tổng quan tình hình &lt;code&gt;Covid -19&lt;/code&gt; trên toàn thế giới tính tới thời điểm đang viết bài này:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kiểm tra tổng số nước trên toàn thế giới trong tập dữ liệu:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;length(unique(final_df$Country.Region))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 188&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tổng các &lt;code&gt;cases&lt;/code&gt; trên toàn thế giới:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tính tổng các cases
df &amp;lt;- final_df[,3:5] %&amp;gt;% summarise_all(funs(sum))
# Thêm cột Active
df$Active &amp;lt;- df$Confirmed -df$Deaths - df$Recovered
df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 4
##    Confirmed   Deaths Recovered    Active
##        &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;int&amp;gt;     &amp;lt;int&amp;gt;
## 1 1517642903 68133485 824551027 624958391&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Tạo data frame các cacses để vẽ pie chart
df1 &amp;lt;- data.frame(Cases = colnames(df), n = as.vector(unlist(df)))

# Tạo pie chart
ggplot(df1, aes (x=&amp;quot;&amp;quot;, y = n, fill = factor(Cases))) + 
  geom_col(position = &amp;#39;stack&amp;#39;, width = 1) +
  geom_text(aes(label = paste(round(n / sum(n) * 100, 1), &amp;quot;%&amp;quot;), x = 1.3),
            position = position_stack(vjust = 0.5)) +
  theme_void() +
  labs(fill = &amp;quot;Cases&amp;quot;,
       x = NULL,
       y = NULL,
       title = &amp;quot;Pie Chart of Covid-19 cases in the world&amp;quot;) +
  coord_polar(&amp;quot;y&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;576&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.2 Top 10 nước có số &lt;code&gt;cases&lt;/code&gt; lớn nhất&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tính tổng các &lt;code&gt;cases&lt;/code&gt; của từng nước tính đến thời điểm hiện tại:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df_countries &amp;lt;- final_df %&amp;gt;% select(-Date) %&amp;gt;% group_by(Country.Region) %&amp;gt;% summarise_all(funs(sum))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;confirmed cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Lọc top 10 nước theo Confirmed Cases
confirmed &amp;lt;- df_countries %&amp;gt;% arrange(desc(Confirmed)) %&amp;gt;% slice(1:10)
confirmed$Country.Region &amp;lt;- factor(confirmed$Country.Region, levels=unique(confirmed$Country.Region))
# Vẽ barplot
ggplot(confirmed, aes(x=Confirmed, y=Country.Region, fill= Country.Region))+
  geom_bar(stat=&amp;#39;identity&amp;#39;)+
  ggtitle(&amp;quot;Top 10 Countries (Confirmed cases)&amp;quot;) +
  theme_bw()+
  theme(legend.position=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Death cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Lọc top 10 nước theo Confirmed Cases
deaths&amp;lt;- df_countries %&amp;gt;% arrange(desc(Deaths)) %&amp;gt;% slice(1:10)

deaths$Country.Region &amp;lt;- factor(deaths$Country.Region, levels=unique(deaths$Country.Region))
ggplot(deaths, aes(x=Deaths, y=Country.Region, fill= Country.Region))+
  geom_bar(stat=&amp;#39;identity&amp;#39;)+
  ggtitle(&amp;quot;Top 10 Countries (Deaths)&amp;quot;) +
  theme_bw()+
  theme(legend.position=&amp;quot;none&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Recovered Cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Lọc top 10 nước theo Confirmed Cases
recovered &amp;lt;- df_countries %&amp;gt;% arrange(desc(Recovered)) %&amp;gt;% slice(1:10)
recovered$Country.Region &amp;lt;- factor(recovered$Country.Region, levels=unique(recovered$Country.Region))
ggplot(recovered, aes(x=Recovered, y=Country.Region, fill= Country.Region))+
  geom_bar(stat=&amp;#39;identity&amp;#39;)+
  ggtitle(&amp;quot;Top 10 Countries (Recovered Cases)&amp;quot;) +
  theme_bw()+
  theme(legend.position=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.3 Mức độ phát triển của Covid-19 theo thời gian trên toàn thế giới&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tính tổng các &lt;code&gt;cases&lt;/code&gt; trên toàn thế giới theo thời gian&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world &amp;lt;- final_df %&amp;gt;% group_by(Date) %&amp;gt;% summarize(Confirmed=sum(Confirmed), Deaths=sum(Deaths), Recovered=sum(Recovered))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Confirmed cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(world, aes(x=Date, y=Confirmed)) + geom_bar(stat=&amp;quot;identity&amp;quot;, width=0.2, color = &amp;quot;blue&amp;quot;) +
  theme_bw() +
  labs(title = &amp;quot;Confirmed Cases In Each Days&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Confirmed cases&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Deaths&lt;/code&gt; trên toàn thế giới theo thời gian:`&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(world, aes(x=Date, y=Deaths)) + geom_bar(stat=&amp;quot;identity&amp;quot;, width=0.2, color = &amp;quot;green&amp;quot;) +
  theme_bw() +
  labs(title = &amp;quot;Deaths In Each Day&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Death cases&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Recovered cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(world, aes(x=Date, y=Recovered)) + geom_bar(stat=&amp;quot;identity&amp;quot;, width=0.2, color = &amp;quot;purple&amp;quot;) +
  theme_bw() +
  labs(title = &amp;quot;Recovered cases In Each Day&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Recovered cases&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.4 Hiển thị tất cả các cases trên thế giới theo thời gian&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world %&amp;gt;% gather(&amp;quot;Cases&amp;quot;, &amp;quot;value&amp;quot;, -Date) %&amp;gt;%
ggplot(aes(x=Date, y=value, colour=Cases)) + geom_bar(stat=&amp;quot;identity&amp;quot;, width=0.2, fill=&amp;quot;white&amp;quot;) +
  labs(title = &amp;quot;Covid-19 Global Cases&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Daily cases&amp;quot;)+
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;864&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world %&amp;gt;% gather(&amp;quot;Cases&amp;quot;, &amp;quot;value&amp;quot;, -Date) %&amp;gt;%
ggplot(aes(x=Date, y=value, colour=Cases)) + geom_line(, size = 1) +
  labs(title = &amp;quot;Covid-19 Global Cases&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Daily cases&amp;quot;)+
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.5 So sánh sự phát triển của COVID-19 theo thời gian giữa các nước&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So sánh Việt Nam, Mỹ, Nga:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_df %&amp;gt;% filter(Country.Region == &amp;quot;Vietnam&amp;quot;) %&amp;gt;% gather(&amp;quot;Cases&amp;quot;, &amp;quot;value&amp;quot;, -Country.Region, -Date) %&amp;gt;%
ggplot(aes(x=Date, y=value, colour=Cases)) + geom_line(, size = 1) +
  labs(title = &amp;quot;COVID-19 cases of Vietnam&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Daily cases&amp;quot;)+
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_df %&amp;gt;% filter(Country.Region == &amp;quot;US&amp;quot;) %&amp;gt;% gather(&amp;quot;Cases&amp;quot;, &amp;quot;value&amp;quot;, -Country.Region, -Date) %&amp;gt;%
ggplot(aes(x=Date, y=value, colour=Cases)) + geom_line(, size = 1) +
  labs(title = &amp;quot;COVID-19 cases of US&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Daily cases&amp;quot;)+
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;final_df %&amp;gt;% filter(Country.Region == &amp;quot;Russia&amp;quot;) %&amp;gt;% gather(&amp;quot;Cases&amp;quot;, &amp;quot;value&amp;quot;, -Country.Region, -Date) %&amp;gt;%
ggplot(aes(x=Date, y=value, colour=Cases)) + geom_line(, size = 1) +
  labs(title = &amp;quot;COVID-19 cases of Russia&amp;quot;, x= &amp;quot;Date&amp;quot;, y= &amp;quot;Daily cases&amp;quot;)+
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-28-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Do thực hiện công việc tương tự như &lt;code&gt;Python&lt;/code&gt; nhưng mà nhanh quá, nên tôi thử tạo thêm bản đồ phân bố dịch này nữa:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Chuẩn bị dữ liệu
country &amp;lt;- final_df %&amp;gt;% group_by(Country.Region) %&amp;gt;% mutate(Cumconfirmed=cumsum(Confirmed))

world &amp;lt;- country %&amp;gt;% group_by(Date) %&amp;gt;% summarize(Confirmed=sum(Confirmed), Cumconfirmed=sum(Cumconfirmed), Deaths=sum(Deaths), Recovered=sum(Recovered)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## Map
countrytotal &amp;lt;- country %&amp;gt;% group_by(Country.Region) %&amp;gt;% summarize(Cumconfirmed=sum(Confirmed), Cumdeaths=sum(Deaths), Cumrecovered=sum(Recovered))
# Basemap from package tmap
library(tmap)
data(World)

# Combine basemap data với covid data
list &amp;lt;- which(!countrytotal$Country.Region %in% World$name)
countrytotal$country &amp;lt;- as.character(countrytotal$Country.Region)
countrytotal$country[list] &amp;lt;-
  c(&amp;quot;Andorra&amp;quot;, &amp;quot;Antigua and Barbuda&amp;quot;, &amp;quot;Bahrain&amp;quot;,
    &amp;quot;Barbados&amp;quot;, &amp;quot;Bosnia and Herz.&amp;quot;, &amp;quot;Myanmar&amp;quot;,
    &amp;quot;Cape Verde&amp;quot;, &amp;quot;Central African Rep.&amp;quot;, &amp;quot;Congo&amp;quot;,
    &amp;quot;Dem. Rep. Congo&amp;quot;, &amp;quot;Czech Rep.&amp;quot;, &amp;quot;Diamond Princess&amp;quot;,
    &amp;quot;Dominica&amp;quot;, &amp;quot;Dominican Rep.&amp;quot;, &amp;quot;Eq. Guinea&amp;quot;,
    &amp;quot;Swaziland&amp;quot;, &amp;quot;Grenada&amp;quot;, &amp;quot;Holy See&amp;quot;,
    &amp;quot;Korea&amp;quot;, &amp;quot;Lao PDR&amp;quot;, &amp;quot;Liechtenstein&amp;quot;,
    &amp;quot;Maldives&amp;quot;, &amp;quot;Malta&amp;quot;, &amp;quot;Mauritius&amp;quot;,
    &amp;quot;Monaco&amp;quot;, &amp;quot;MS Zaandam&amp;quot;, &amp;quot;Macedonia&amp;quot;,
    &amp;quot;Saint Kitts and Nevis&amp;quot;, &amp;quot;Saint Lucia&amp;quot;, &amp;quot;Saint Vincent and the Grenadines&amp;quot;,
    &amp;quot;San Marino&amp;quot;, &amp;quot;Sao Tome and Principe&amp;quot;, &amp;quot;Seychelles&amp;quot;,
    &amp;quot;Singapore&amp;quot;, &amp;quot;S. Sudan&amp;quot;, &amp;quot;Taiwan&amp;quot;,
    &amp;quot;United States&amp;quot;, &amp;quot;Palestine&amp;quot;, &amp;quot;W. Sahara&amp;quot;)
World$country &amp;lt;- World$name
worldmap &amp;lt;- left_join(World, countrytotal, by=&amp;quot;country&amp;quot;)
worldmap$cumconfirmed[is.na(worldmap$Cumconfirmed)] &amp;lt;- 0&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Map
ggplot(data = worldmap) + geom_sf(aes(fill=Cumconfirmed), color=&amp;quot;black&amp;quot;) +
  ggtitle(&amp;quot;World Map of Confirmed Covid Cases&amp;quot;,
          subtitle=&amp;quot;Total Cases on  August  29, 2020&amp;quot;) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/covid-19-r/index_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Download và trực quan hóa dữ liệu Covid-19 từ John Hopkins database (sử dụng Python code)</title>
      <link>/post/covid-19-python/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      <guid>/post/covid-19-python/</guid>
      <description>&lt;p&gt;&lt;code&gt;Covid-19&lt;/code&gt; là một đại dịch bệnh truyền nhiễm với tác nhân là virus &lt;code&gt;SARS-CoV-2&lt;/code&gt;, hiện đang ảnh hưởng và gây thiệt hại nặng nề trên phạm vi toàn cầu. Kể từ khi đại dịch &lt;code&gt;Covid-19&lt;/code&gt; bắt đầu xuất hiện ở Vũ Hán - Trung Quốc đến nay, cái tên trường Đại học Jonhs Hopkins (Mỹ) được nhắc đi nhắc lại hằng ngày trên các phương tiện truyền thông và là một trong những cụm từ được trích dẫn nhiều nhất. Lý do đó là Đại học Johns Hopkins đã phát triển một trong những hệ thống theo dõi dữ liệu COVID-19 bền bỉ và đáng tin cậy nhất trên thế giới cho đến nay.&lt;/p&gt;
&lt;p&gt;Dữ liệu Covid-19 được đại học &lt;code&gt;John Hopkins&lt;/code&gt; thu thập và cập nhật hàng ngày tại đây 
&lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Hopkins database&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Trong bài này để hiểu hơn về đại dịch này tôi sẽ hướng dẫn các bạn cách download dữ liệu Covid-19 từ 
&lt;a href=&#34;https://github.com/CSSEGISandData/COVID-19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Hopkins database&lt;/a&gt; và thực hành các thao tác chuẩn bị dữ liệu (làm sạch và biến đổi) với thư viện &lt;code&gt;pandas&lt;/code&gt; và trực quan hóa dữ liệu với thư viện &lt;code&gt;maplotlib&lt;/code&gt; sử dụng ngôn ngữ Python. Sau khi đọc xong bài này các bạn sẽ nắm được:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cách download dữ liệu Covid-19 từ &lt;code&gt;Jonh Hopkins&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cách làm sạch và biến đổi dữ liệu dạng &lt;code&gt;data frame&lt;/code&gt; với thư viện &lt;code&gt;pandas&lt;/code&gt;: xử lý dữ liệu bị thiếu, gộp các dataframes, chuyển đổi dữ liệu từ dạng &lt;code&gt;wide format&lt;/code&gt; sang dạng &lt;code&gt;long fromat&lt;/code&gt;, subset,&amp;hellip;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cách trực quan hóa dữ liệu &lt;code&gt;Covid-19&lt;/code&gt; sử dụng thư viện &lt;code&gt;matplotlib&lt;/code&gt;: Pie chart, Bar chart, Line chart, Multi-Line Chart, xử lý dữ liệu &lt;code&gt;date&lt;/code&gt; trong vẽ biểu đồ,&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Từ đó các bạn có thể phát triển các kỹ thuật trên thành các &lt;code&gt;Data visualization Dashboards&lt;/code&gt; hoặc là web tương tác để &lt;code&gt;tracking&lt;/code&gt; tình hình &lt;code&gt;Covid-19&lt;/code&gt; trên toàn thế giới tương tự như 
&lt;a href=&#34;https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;John Hopkins University Dashboard&lt;/a&gt;, 
&lt;a href=&#34;https://covid19.who.int/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WHO COVID-19 Dashboard&lt;/a&gt;,&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;nội-dung-chính-của-bài-bao-gồm&#34;&gt;Nội dung chính của bài bao gồm:&lt;/h3&gt;
&lt;p&gt;
&lt;a href=&#34;#prepare-data&#34;&gt;1. Download &amp;amp; chuẩn bị dữ liệu Covid-19 sử dụng thư viện pandas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;#data-visualization&#34;&gt;2. Trực quan hóa dữ liệu Covid-19 sử dụng thư viện matploblib&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;prepare-data&#34;&gt;1. Download và chuẩn bị dữ liệu&lt;/h2&gt;
&lt;p&gt;Trước hết để thực hành chúng ta cần nạp các thư viện cần thiết trên &lt;code&gt;Python&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime, timedelta
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Để thực hành tôi sẽ load 3 tập dữ liệu sau từ kho dữ liệu qua &lt;code&gt;url_links&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Confirmed:&lt;/code&gt; (Số trường hợp mới phát hiện)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Deaths:&lt;/code&gt; (Số trường hợp tử vong)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Recovered:&lt;/code&gt; (Số trường hợp hồi phục)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;url_confd = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&#39;
url_death = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv&#39;
url_recvd = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv&#39;
df_confd = pd.read_csv(url_confd)
df_death = pd.read_csv(url_death)
df_recvd = pd.read_csv(url_recvd)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra thông tin các tập dữ liệu này:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_confd.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 266 entries, 0 to 265
Columns: 224 entries, Province/State to 8/28/20
dtypes: float64(2), int64(220), object(2)
memory usage: 465.6+ KB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_death.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 266 entries, 0 to 265
Columns: 224 entries, Province/State to 8/28/20
dtypes: float64(2), int64(220), object(2)
memory usage: 465.6+ KB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_recvd.info())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;class &#39;pandas.core.frame.DataFrame&#39;&amp;gt;
RangeIndex: 253 entries, 0 to 252
Columns: 223 entries, Province/State to 8/27/20
dtypes: float64(2), int64(219), object(2)
memory usage: 440.9+ KB
None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra 5 hàng đầu tiên của tập dữ liệu &lt;code&gt;df_confd&lt;/code&gt; (2 tập còn lại tương tự):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(df_confd.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long  1/22/20  1/23/20  \
0            NaN    Afghanistan  33.93911  67.709953        0        0   
1            NaN        Albania  41.15330  20.168300        0        0   
2            NaN        Algeria  28.03390   1.659600        0        0   
3            NaN        Andorra  42.50630   1.521800        0        0   
4            NaN         Angola -11.20270  17.873900        0        0   

   1/24/20  1/25/20  1/26/20  1/27/20  ...  8/19/20  8/20/20  8/21/20  \
0        0        0        0        0  ...    37599    37856    37894   
1        0        0        0        0  ...     7812     7967     8119   
2        0        0        0        0  ...    39847    40258    40667   
3        0        0        0        0  ...     1024     1024     1045   
4        0        0        0        0  ...     2015     2044     2068   

   8/22/20  8/23/20  8/24/20  8/25/20  8/26/20  8/27/20  8/28/20  
0    37953    37999    38054    38070    38113    38129    38140  
1     8275     8427     8605     8759     8927     9083     9195  
2    41068    41460    41858    42228    42619    43016    43403  
3     1045     1045     1060     1060     1098     1098     1124  
4     2134     2171     2222     2283     2332     2415     2471  

[5 rows x 224 columns]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Trích xuất thông tin về ngày từ tập dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dates = df_confd.columns[4:]
print(dates)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Index([&#39;1/22/20&#39;, &#39;1/23/20&#39;, &#39;1/24/20&#39;, &#39;1/25/20&#39;, &#39;1/26/20&#39;, &#39;1/27/20&#39;,
       &#39;1/28/20&#39;, &#39;1/29/20&#39;, &#39;1/30/20&#39;, &#39;1/31/20&#39;,
       ...
       &#39;8/19/20&#39;, &#39;8/20/20&#39;, &#39;8/21/20&#39;, &#39;8/22/20&#39;, &#39;8/23/20&#39;, &#39;8/24/20&#39;,
       &#39;8/25/20&#39;, &#39;8/26/20&#39;, &#39;8/27/20&#39;, &#39;8/28/20&#39;],
      dtype=&#39;object&#39;, length=220)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Các tập dữ liệu này được lưu ở dạng &lt;code&gt;wide format&lt;/code&gt; do đó chúng ta cần chuyển chúng dạng &lt;code&gt;long fromat&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;dates = df_confd.columns[4:]
long_df_confd = df_confd.melt(id_vars=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;], 
                            value_vars=dates, var_name=&#39;Date&#39;, value_name=&#39;Confirmed&#39;)

long_df_death = df_death.melt(id_vars=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;], 
                            value_vars=dates, var_name=&#39;Date&#39;, value_name=&#39;Deaths&#39;)

long_df_recvd = df_recvd.melt(id_vars=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;], 
                            value_vars=dates, var_name=&#39;Date&#39;, value_name=&#39;Recovered&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra dữ liệu sau khi đã chuyển:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(long_df_confd.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long     Date  Confirmed
0            NaN    Afghanistan  33.93911  67.709953  1/22/20          0
1            NaN        Albania  41.15330  20.168300  1/22/20          0
2            NaN        Algeria  28.03390   1.659600  1/22/20          0
3            NaN        Andorra  42.50630   1.521800  1/22/20          0
4            NaN         Angola -11.20270  17.873900  1/22/20          0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(long_df_death.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long     Date  Deaths
0            NaN    Afghanistan  33.93911  67.709953  1/22/20       0
1            NaN        Albania  41.15330  20.168300  1/22/20       0
2            NaN        Algeria  28.03390   1.659600  1/22/20       0
3            NaN        Andorra  42.50630   1.521800  1/22/20       0
4            NaN         Angola -11.20270  17.873900  1/22/20       0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(long_df_recvd.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long     Date  Recovered
0            NaN    Afghanistan  33.93911  67.709953  1/22/20          0
1            NaN        Albania  41.15330  20.168300  1/22/20          0
2            NaN        Algeria  28.03390   1.659600  1/22/20          0
3            NaN        Andorra  42.50630   1.521800  1/22/20          0
4            NaN         Angola -11.20270  17.873900  1/22/20          0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gộp 3 tập dữ liệu này thành 1 dataframe:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df = pd.merge(left=long_df_confd, right=long_df_death, how=&#39;left&#39;,
                      on=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Date&#39;, &#39;Lat&#39;, &#39;Long&#39;])
final_df = pd.merge(left=final_df, right=long_df_recvd, how=&#39;left&#39;,
                      on=[&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Date&#39;, &#39;Lat&#39;, &#39;Long&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Chuyển cột dữ liệu ngày về dạng &lt;code&gt;date&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df[&#39;Date&#39;] = pd.to_datetime(final_df[&#39;Date&#39;])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra bảng dữ liệu thu được:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(final_df.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long       Date  Confirmed  \
0            NaN    Afghanistan  33.93911  67.709953 2020-01-22          0   
1            NaN        Albania  41.15330  20.168300 2020-01-22          0   
2            NaN        Algeria  28.03390   1.659600 2020-01-22          0   
3            NaN        Andorra  42.50630   1.521800 2020-01-22          0   
4            NaN         Angola -11.20270  17.873900 2020-01-22          0   

   Deaths  Recovered  
0       0        0.0  
1       0        0.0  
2       0        0.0  
3       0        0.0  
4       0        0.0  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra kích thước của bảng dữ liệu thu được:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(final_df.shape)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;(58520, 8)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra khoảng thời gian của dữ liệu được thu thập:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;a = final_df.Date.value_counts().sort_index()
print(&#39;Ngày bắt đầu là:&#39;,a.index[0])
print(&#39;Ngày hiện tại là:&#39;,a.index[-1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Ngày bắt đầu là: 2020-01-22 00:00:00
Ngày hiện tại là: 2020-08-28 00:00:00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra &lt;code&gt;missing values (NaN)&lt;/code&gt; trong tập dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df.isna().sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State    40515
Country/Region        0
Lat                   0
Long                  0
Date                  0
Confirmed             0
Deaths                0
Recovered          4161
dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Đánh giá phần trăm &lt;code&gt;missing values&lt;/code&gt; của từng cột dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;NAN = [(c, final_df[c].isna().mean()*100) for c in final_df]
NAN = pd.DataFrame(NAN, columns=[&amp;quot;column_name&amp;quot;, &amp;quot;percentage&amp;quot;])
print(NAN)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      column_name  percentage
0  Province/State   69.548872
1  Country/Region    0.000000
2             Lat    0.000000
3            Long    0.000000
4            Date    0.000000
5       Confirmed    0.000000
6          Deaths    0.000000
7       Recovered    7.142857
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ta thấy cột &lt;code&gt;Province/State&lt;/code&gt; có gần &lt;code&gt;69.55%&lt;/code&gt; dữ liệu bị thiếu và cột &lt;code&gt;Recovered&lt;/code&gt; có &lt;code&gt;7,14%&lt;/code&gt;. Vì vậy chúng ta cần xử lý các giá trị thiếu này:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Thay thế nan thành 0 cho cột Recovered
final_df[&#39;Recovered&#39;] = final_df[&#39;Recovered&#39;].fillna(0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Thay thế nan thành Unknown cho cột Province/State
final_df[&amp;quot;Province/State&amp;quot;]= final_df[&amp;quot;Province/State&amp;quot;].fillna(&#39;Unknown&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra xem trong dữ liệu còn &lt;code&gt;missing values&lt;/code&gt; không:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df.isna().sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State    0
Country/Region    0
Lat               0
Long              0
Date              0
Confirmed         0
Deaths            0
Recovered         0
dtype: int64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kiểm tra kiểu dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(final_df.dtypes)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State            object
Country/Region            object
Lat                      float64
Long                     float64
Date              datetime64[ns]
Confirmed                  int64
Deaths                     int64
Recovered                float64
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thay đổi kiểu dữ liệu cho các cột &lt;code&gt;Confirmed, Deaths và Recovered&lt;/code&gt; thành &lt;code&gt;int&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df[[&amp;quot;Confirmed&amp;quot;,&amp;quot;Deaths&amp;quot;,&amp;quot;Recovered&amp;quot;]] = final_df[[&amp;quot;Confirmed&amp;quot;,&amp;quot;Deaths&amp;quot;,&amp;quot;Recovered&amp;quot;]].astype(int)
print(final_df.dtypes)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Province/State            object
Country/Region            object
Lat                      float64
Long                     float64
Date              datetime64[ns]
Confirmed                  int32
Deaths                     int32
Recovered                  int32
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tạo thuộc tính mới &lt;code&gt;Active&lt;/code&gt; (Số trường hợp còn đang nhiễm sau khi đã trừ đi số trường hợp tử vong và hồi phục): 
$$Active = Confirmed - Deaths - Recovered$$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;final_df[&#39;Active&#39;] = final_df[&#39;Confirmed&#39;] - final_df[&#39;Deaths&#39;] - final_df[&#39;Recovered&#39;]
print(final_df.head(5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;  Province/State Country/Region       Lat       Long       Date  Confirmed  \
0        Unknown    Afghanistan  33.93911  67.709953 2020-01-22          0   
1        Unknown        Albania  41.15330  20.168300 2020-01-22          0   
2        Unknown        Algeria  28.03390   1.659600 2020-01-22          0   
3        Unknown        Andorra  42.50630   1.521800 2020-01-22          0   
4        Unknown         Angola -11.20270  17.873900 2020-01-22          0   

   Deaths  Recovered  Active  
0       0          0       0  
1       0          0       0  
2       0          0       0  
3       0          0       0  
4       0          0       0  
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;data-visualization&#34;&gt;2. Trực quan hóa dữ liệu&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;2.1 Tổng quan tình hình Covid -19 trên toàn thế giới tính tới thời điểm đang viết bài này:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kiểm tra tổng số nước trên toàn thế giới trong tập dữ liệu:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;len(final_df[&#39;Country/Region&#39;].unique())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;188
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tổng các cases trên toàn thế giới:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = pd.DataFrame(pd.to_numeric(final_df[[&#39;Confirmed&#39;, &#39;Deaths&#39;, &#39;Recovered&#39;, &#39;Active&#39;]].sum()),dtype=np.float64).transpose()
df[&#39;Last date&#39;] = max(final_df[&#39;Date&#39;])
print(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;      Confirmed      Deaths    Recovered       Active  Last date
0  1.492646e+09  67290986.0  798778726.0  626576735.0 2020-08-28
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tạo &lt;code&gt;Pie chart&lt;/code&gt; so sánh các cases trên toàn thế giới:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cases = [&#39;Confirmed&#39;, &#39;Deaths&#39;, &#39;Recovered&#39;, &#39;Active&#39;]
colors = [&#39;gold&#39;, &#39;yellowgreen&#39;, &#39;lightcoral&#39;, &#39;lightskyblue&#39;]
explode = (0.1, 0, 0, 0)  # explode 1st slice
sizes = sum(df.loc[:, &#39;Confirmed&#39;:&#39;Active&#39;].values)
explode = (0.1, 0, 0, 0)  # explode 1st slice

# Plot
f = plt.figure(figsize=(8,8))
plt.pie(sizes, explode=explode, 
        textprops=dict(size=15,color=&#39;black&#39;),
        labels=cases, 
        colors=colors,
        autopct=&#39;%1.1f%%&#39;, 
        shadow=True, 
        startangle=140)
plt.axis(&#39;equal&#39;)
plt.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_54_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.2 Top 10 nước có số trường hợp (confirmed, deaths, recovered and active cases) lớn nhất&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tính tổng các &lt;code&gt;cases&lt;/code&gt; của từng nước tính đến thười điểm hiện tại:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_countries = final_df.copy().drop([&#39;Lat&#39;,&#39;Long&#39;,&#39;Province/State&#39;, &#39;Date&#39;],axis =1)
df_countries = df_countries.groupby([&amp;quot;Country/Region&amp;quot;]).sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;confirmed cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)
plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Confirmed&#39;)[&amp;quot;Confirmed&amp;quot;].index[-10:],df_countries.sort_values(&#39;Confirmed&#39;)[&amp;quot;Confirmed&amp;quot;].values[-10:],color=&amp;quot;darkcyan&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Confirmed Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Confirmed Cases)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_59_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Deaths&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)

plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Deaths&#39;)[&amp;quot;Deaths&amp;quot;].index[-10:],df_countries.sort_values(&#39;Deaths&#39;)[&amp;quot;Deaths&amp;quot;].values[-10:],color=&amp;quot;crimson&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Deaths Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Deaths)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_61_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Recovered Cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)

plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Recovered&#39;)[&amp;quot;Recovered&amp;quot;].index[-10:],df_countries.sort_values(&#39;Recovered&#39;)[&amp;quot;Recovered&amp;quot;].values[-10:],color=&amp;quot;limegreen&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Recovered Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Recovered Cases)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_63_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Top 10 nước có &lt;code&gt;Active Cases&lt;/code&gt; lớn nhất:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;f = plt.figure(figsize=(10,5))
f.add_subplot(111)

plt.axes(axisbelow=True)
plt.barh(df_countries.sort_values(&#39;Active&#39;)[&amp;quot;Active&amp;quot;].index[-10:],df_countries.sort_values(&#39;Active&#39;)[&amp;quot;Active&amp;quot;].values[-10:],color=&amp;quot;darkorange&amp;quot;)
plt.tick_params(size=5,labelsize = 13)
plt.xlabel(&amp;quot;Active Cases&amp;quot;,fontsize=18)
plt.title(&amp;quot;Top 10 Countries (Active Cases)&amp;quot;,fontsize=20)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_65_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.3 Mức độ phát triển của Covid-19 theo thời gian trên toàn thế giới&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Tính tổng các &lt;code&gt;cases&lt;/code&gt; trên toàn thế giới theo thời gian&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_world = final_df.groupby([&amp;quot;Date&amp;quot;])[[&amp;quot;Confirmed&amp;quot;,&amp;quot;Active&amp;quot;,&amp;quot;Recovered&amp;quot;,&amp;quot;Deaths&amp;quot;]].sum().reset_index()
df_world.set_index(&#39;Date&#39;,inplace=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Confirmed cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Confirmed&#39;],
        color=&#39;blue&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Confirmed cases&amp;quot;,
       title=&amp;quot;Confirmed Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_70_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Deaths&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Deaths&#39;],
        color=&#39;red&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Deaths&amp;quot;,
       title=&amp;quot;Deaths In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_72_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Recovered cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Recovered&#39;],
        color=&#39;purple&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Recovered cases&amp;quot;,
       title=&amp;quot;Recovered Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_74_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mức độ phát triển của &lt;code&gt;Active Cases&lt;/code&gt; trên toàn thế giới theo thời gian:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(10, 6))

# Add x-axis and y-axis
ax.bar(df_world.index.values,
        df_world[&#39;Active&#39;],
        color= &#39;green&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Active Cases&amp;quot;,
       title=&amp;quot;Active Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_76_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.4 Hiển thị tất cả các cases trên thế giới theo thời gian&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(12, 6))

# Add x-axis and y-axis
ax.plot(df_world.index.values,
        df_world[&#39;Confirmed&#39;],
        color=&#39;blue&#39;, label = &#39;Confirmed Cases&#39;)

ax.plot(df_world.index.values,
        df_world[&#39;Deaths&#39;],
        color=&#39;red&#39;, label = &#39;Deaths&#39;)

ax.plot(df_world.index.values,
        df_world[&#39;Recovered&#39;],
        color=&#39;purple&#39;, label = &#39;Recovered Cases&#39;)


ax.plot(df_world.index.values,
        df_world[&#39;Active&#39;],
        color= &#39;green&#39;,  label= &#39;Active Cases&#39;)


# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Cases&amp;quot;,
       title=&amp;quot;COVID-19 Cases In Each Day&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.legend(loc=&amp;quot;upper left&amp;quot;)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_78_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.5 Tổng số lượng các quốc gia trên thế giới xuất hiện dịch bệnh Covid-19 theo thời gian&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Tính tổng số lượng các nước xuất hiện dịch Covid-19 theo thời gian
case_nums_country = df_confd.groupby(&amp;quot;Country/Region&amp;quot;).sum().drop([&#39;Lat&#39;,&#39;Long&#39;],axis =1).apply(lambda x: x[x &amp;gt; 0].count(), axis =0)
d = [datetime.strptime(date,&#39;%m/%d/%y&#39;).strftime(&amp;quot;%d %b&amp;quot;) for date in case_nums_country.index]

f = plt.figure(figsize=(10,5))
f.add_subplot(111)
marker_style = dict(c=&amp;quot;crimson&amp;quot;,linewidth=1, linestyle=&#39;-&#39;, marker=&#39;o&#39;,markersize=4, markerfacecolor=&#39;blue&#39;)
plt.plot(df_world.index.values, case_nums_country,**marker_style)
plt.setp(ax.get_xticklabels(), rotation=90)
plt.xlabel(&amp;quot;Dates&amp;quot;,fontsize=10)
plt.grid(alpha = 0.3)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_80_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2.6 So sánh sự phát triển của COVID-19 theo thời gian giữa các nước&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So sánh Việt Nam, Mỹ, Nga:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_Vietnam = final_df[final_df[&#39;Country/Region&#39;] == &#39;Vietnam&#39;]
df_Russia = final_df[final_df[&#39;Country/Region&#39;] == &#39;Russia&#39;]
df_US = final_df[final_df[&#39;Country/Region&#39;] == &#39;US&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do Mỹ và Nga cùng có số lượng các &lt;code&gt;cases&lt;/code&gt; lớn nên biểu thị vào cùng một biểu đồ:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Create figure and plot space
fig, ax = plt.subplots(figsize=(12, 6))

# Add x-axis and y-axis
ax.plot(df_US[&#39;Date&#39;],
        df_US[&#39;Confirmed&#39;],
        color=&#39;blue&#39;, label = &#39;Confirmed Cases of US&#39;)

ax.plot(df_US[&#39;Date&#39;],
        df_US[&#39;Active&#39;],
        &#39;-.&#39;,
        color=&#39;blue&#39;, label = &#39;Active Cases of US&#39;)

ax.plot(df_US[&#39;Date&#39;],
        df_US[&#39;Recovered&#39;],
        &#39;--&#39;,
        color=&#39;blue&#39;, label = &#39;Recovered Cases of US&#39;)

ax.plot(df_Russia[&#39;Date&#39;],
        df_Russia[&#39;Confirmed&#39;],
        color=&#39;red&#39;, label = &#39;Confirmed Cases of Russia&#39;)

ax.plot(df_Russia[&#39;Date&#39;],
        df_Russia[&#39;Active&#39;],
        &#39;-.&#39;,
        color=&#39;red&#39;, label = &#39;Active Cases of Russia&#39;)

ax.plot(df_Russia[&#39;Date&#39;],
        df_Russia[&#39;Recovered&#39;],
        &#39;--&#39;,
        color=&#39;red&#39;, label = &#39;Recovered Cases of Russia&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Cases&amp;quot;,
       title=&amp;quot;Confirmed Cases of COVID-19 of Russia vs US&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.legend(loc=&amp;quot;upper left&amp;quot;)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_84_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Việt nam có tổng số các &lt;code&gt;cases&lt;/code&gt; nhỏ hơn rất nhiều so với Russia và Mỹ nên nếu biểu thị vào cùng 1 biểu đồ thì sẽ rất khó nhìn. Do vậy tôi biểu diễn Việt Nam riêng:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig, ax = plt.subplots(figsize=(12, 6))

# Add x-axis and y-axis


ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Confirmed&#39;],
        color=&amp;quot;red&amp;quot;, label = &#39;Confirmed Cases of Vietnam&#39;)

ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Deaths&#39;],
        &#39;-.&#39;,
        color=&amp;quot;black&amp;quot;, label = &#39;Death Case of Vietnam&#39;)

ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Active&#39;],
        &#39;-.&#39;,
        color=&amp;quot;blue&amp;quot;, label = &#39;Active Cases of Vietnam&#39;)

ax.plot(df_Vietnam[&#39;Date&#39;],
        df_Vietnam[&#39;Recovered&#39;],
        &#39;--&#39;,
        color=&amp;quot;green&amp;quot;, label = &#39;Recovered Cases of Vietnam&#39;)

# Set title and labels for axes
ax.set(xlabel=&amp;quot;Date&amp;quot;,
       ylabel=&amp;quot;Cases&amp;quot;,
       title=&amp;quot;COVID-19 cases of Vietnam&amp;quot;)

# Rotate tick marks on x-axis
plt.setp(ax.get_xticklabels(), rotation=45)
plt.legend(loc=&amp;quot;upper left&amp;quot;)
plt.grid(alpha=0.3,which=&#39;both&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_86_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
